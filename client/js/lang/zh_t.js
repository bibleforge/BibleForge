/**
 * BibleForge
 *
 * @date    03-18-13
 * @version alpha (α)
 * @link    http://BibleForge.com
 * @license The MIT License (MIT)
 */

/*!
 * The BibleForge motto:
 *
 * "all things whatsoever ye would that men should do to you, do ye even so to them."
 *     —Jesus (Matthew 7:12)
 */

/*!
 * Copyright (C) 2020
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * “Software”), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so.
 *
 * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

/// Set JSHint options.
// jshint bitwise:true, curly:true, eqeqeq:true, forin:true, immed:true, latedef:true, newcap:true, noarg:true, noempty:true, nonew:true, onevar:true, plusplus:true, quotmark:double, strict:true, undef:true, unused:strict, browser:true

/**
 * Create the BibleForge language specific object for the English language.
 *
 * @param  that (object) The global used to attach the code to.
 * @note   The object that is created is used by main.js to preform language specific operations.
 * @return NULL.  Attaches an object containing language specific functions and variables to the global BF object.
 */
(function (that)
{
    "use strict";
    
    /// This analysis data is used to segment Chinese characters.
    /// Created in the Forge on Wed, 23 Oct 2013 18:08:48 GMT.
    /// Analysis
    var analysis = {"一":{L:80,R:20,M:1},"下":{R:59,L:41,M:1},"世":{R:62,L:38,M:1},"中":{R:49,L:51,M:1},"了":{R:91,L:9,M:1},"事":{R:88,L:12,M:1},"些":{R:76,L:24,M:1},"交":{R:46,L:54,M:1},"亮":{R:78,L:22},"人":{R:71,L:29,M:1},"代":{R:61,L:39,M:1},"件":{R:89,L:11,M:1},"任":{R:50,L:50},"位":{R:94,L:6},"來":{R:72,L:28,M:1},"例":{R:90,L:10},"個":{R:78,L:22,M:1},"倍":{R:89,L:11},"兩":{R:11,L:89,M:1},"共":{R:25,L:75,M:1},"出":{R:56,L:44,M:1},"刀":{R:72,L:28,M:1},"分":{R:52,L:48,M:1},"切":{R:37,L:63,M:1},"到":{R:75,L:25,M:1},"刻":{R:64,L:36,M:1},"動":{R:77,L:23},"匹":{R:67,L:33},"十":{R:30,L:70,M:1},"千":{R:43,L:57,M:1},"半":{R:55,L:45,M:1},"卷":{R:1},"去":{R:68,L:32,M:1},"口":{R:68,L:32,M:1},"句":{R:83,L:17,M:1},"同":{R:24,L:76,M:1},"名":{R:70,L:30,M:1},"吹":{R:31,L:69,M:1},"味":{R:1},"和":{R:52,L:48,M:1},"回":{R:53,L:47,M:1},"圈":{R:67,L:33},"國":{R:66,L:34},"團":{R:67,L:33},"地":{R:69,L:31,M:1},"坐":{R:53,L:47},"城":{R:69,L:31},"堆":{R:57,L:43},"場":{R:80,L:20},"塊":{R:79,L:21,M:1},"壺":{R:1},"夜":{R:58,L:42,M:1},"夥":{R:80,L:20},"大":{R:25,L:75,M:1},"天":{R:56,L:44,M:1},"套":{R:55,L:45},"女":{R:57,L:43,M:1},"子":{R:83,L:17,M:1},"字":{R:71,L:29,M:1},"存":{R:63,L:38},"宗":{R:60,L:40},"定":{R:56,L:44,M:1},"家":{R:63,L:37,M:1},"宿":{R:1},"對":{R:44,L:56,M:1},"小":{R:21,L:79,M:1},"展":{R:63,L:38},"層":{R:83,L:17,M:1},"山":{R:52,L:48,M:1},"席":{R:90,L:10},"帶":{R:51,L:49,M:1},"幅":{R:1},"幫":{R:58,L:42},"年":{R:65,L:35,M:1},"座":{R:71,L:29},"張":{R:50,L:50},"律":{R:67,L:33,M:1},"心":{R:55,L:45,M:1},"想":{R:56,L:44,M:1},"意":{R:73,L:27,M:1},"手":{R:67,L:33},"把":{R:47,L:53,M:1},"掌":{R:50,L:50},"排":{R:60,L:40,M:1},"提":{R:21,L:79,M:1},"摸":{R:50,L:50,M:1},"支":{R:71,L:29},"放":{R:29,L:71},"整":{R:22,L:78,M:1},"文":{R:60,L:40},"斤":{R:1},"新":{R:41,L:59},"方":{R:57,L:43,M:1},"旁":{R:54,L:46},"族":{R:70,L:30},"日":{R:62,L:38,M:1},"是":{R:63,L:37,M:1},"時":{R:52,L:48,M:1},"更":{R:23,L:77},"書":{R:74,L:26,M:1},"會":{R:58,L:42,M:1},"月":{R:66,L:34,M:1},"望":{R:71,L:29,M:1},"本":{R:39,L:61,M:1},"朵":{R:1},"村":{R:60,L:40},"杯":{R:50,L:50,M:1},"枝":{R:78,L:22},"查":{R:47,L:53},"根":{R:67,L:33},"條":{R:76,L:24,M:1},"棵":{R:60,L:40,M:1},"概":{R:50,L:50},"樣":{R:83,L:17,M:1},"樹":{R:65,L:35,M:1},"次":{R:82,L:18,M:1},"歇":{R:40,L:60},"步":{R:67,L:33},"歲":{R:85,L:15},"死":{R:66,L:34,M:1},"段":{R:1},"比":{R:54,L:46,M:1},"滴":{R:43,L:57},"滿":{R:47,L:53,M:1},"片":{R:67,L:33},"物":{R:84,L:16,M:1},"獻":{R:64,L:36},"班":{R:79,L:21,M:1},"瓶":{R:75,L:25},"生":{R:58,L:42,M:1},"畝":{R:1},"番":{R:63,L:38},"畫":{R:43,L:57},"發":{R:34,L:66,M:1},"百":{R:34,L:66,M:1},"盆":{R:63,L:38},"直":{R:30,L:70},"看":{R:47,L:53,M:1},"碰":{R:50,L:50},"程":{R:67,L:33},"種":{R:68,L:32},"空":{R:41,L:59,M:1},"站":{R:45,L:55},"等":{R:52,L:48},"箭":{R:80,L:20,M:1},"篇":{R:1},"籃":{R:67,L:33},"粒":{R:1},"經":{R:52,L:48,M:1},"群":{R:67,L:33,M:1},"聲":{R:84,L:16,M:1},"聽":{R:50,L:50},"股":{R:1},"舉":{R:40,L:60,M:1},"般":{R:80,L:20,M:1},"萬":{R:44,L:56,M:1},"處":{R:80,L:20,M:1},"行":{R:78,L:23,M:1},"袋":{R:1},"見":{R:81,L:19,M:1},"覺":{R:56,L:44},"角":{R:92,L:8,M:1},"言":{R:78,L:22,M:1},"試":{R:38,L:62},"說":{R:69,L:31,M:1},"變":{R:33,L:67},"起":{R:68,L:32,M:1},"路":{R:76,L:24,M:1},"身":{R:63,L:37,M:1},"輛":{R:83,L:17,M:1},"輪":{R:46,L:54},"通":{R:39,L:61},"連":{R:29,L:71,M:1},"進":{R:74,L:26,M:1},"遇":{R:64,L:36},"遍":{R:58,L:42},"過":{R:60,L:40,M:1},"道":{R:72,L:28,M:1},"邊":{R:81,L:19,M:1},"門":{R:68,L:32,M:1},"閃":{R:29,L:71},"開":{R:50,L:50,M:1},"間":{R:84,L:16},"陣":{R:64,L:36},"隊":{R:83,L:17},"隻":{R:56,L:44,M:1},"雙":{R:10,L:90},"離":{R:31,L:69},"霎":{R:33,L:67,M:1},"面":{R:69,L:31,M:1},"響":{R:43,L:57},"頭":{R:76,L:24,M:1},"顆":{R:1},"類":{R:88,L:13},"首":{R:62,L:38,M:1},"體":{R:56,L:44,M:1},"點":{R:60,L:40,M:1},"黨":{R:67,L:33},"齊":{R:54,L:46,M:1},"丁":{L:29,R:71},"當":{R:41,L:59,M:1},"稅":{R:70,L:30},"七":{L:73,R:27,M:1},"公":{R:36,L:64,M:1},"星":{R:45,L:55},"丈":{L:50,R:50,M:1},"夫":{R:58,L:42,M:1},"量":{R:59,L:41},"三":{L:77,R:23,M:1},"反":{R:16,L:84},"四":{R:17,L:83,M:1},"王":{R:43,L:57},"甲":{R:71,L:29,M:1},"舍":{R:60,L:40},"鑒":{R:1},"上":{L:52,R:48,M:1},"主":{R:48,L:52},"也":{R:27,L:73,M:1},"作":{R:53,L:47,M:1},"佳":{R:50,L:50},"供":{R:33,L:67},"信":{R:67,L:33,M:1},"停":{R:25,L:75,M:1},"傳":{R:32,L:68},"像":{R:70,L:30},"光":{R:63,L:37},"冊":{R:50,L:50},"冠":{R:50,L:50},"列":{R:46,L:54,M:1},"前":{R:39,L:61,M:1},"加":{R:36,L:64,M:1},"包":{R:38,L:62},"升":{R:20,L:80},"印":{R:50,L:50},"卻":{R:22,L:78},"古":{R:57,L:43,M:1},"合":{R:46,L:54,M:1},"向":{R:59,L:41},"告":{R:61,L:39,M:1},"品":{R:75,L:25},"哪":{R:64,L:36},"唇":{R:1},"圖":{R:56,L:44},"坡":{R:1},"報":{R:50,L:50},"奏":{R:75,L:25},"好":{R:50,L:50,M:1},"寫":{R:45,L:55},"將":{R:63,L:37,M:1},"就":{R:21,L:79,M:1},"岸":{R:89,L:11},"差":{R:65,L:35,M:1},"帝":{R:20,L:80,M:1},"平":{R:42,L:58,M:1},"床":{R:71,L:29,M:1},"弦":{R:75,L:25},"愚":{R:18,L:82},"成":{R:72,L:28,M:1},"房":{R:68,L:32,M:1},"才":{R:33,L:68},"打":{R:35,L:65},"指":{R:46,L:54,M:1},"操":{R:25,L:75},"春":{R:33,L:67},"晝":{R:67,L:33},"有":{R:40,L:60,M:1},"服":{R:75,L:25,M:1},"朝":{R:36,L:64},"木":{R:45,L:55,M:1},"板":{R:86,L:14},"樓":{R:61,L:39},"水":{R:53,L:47,M:1},"油":{R:50,L:50,M:1},"流":{R:58,L:42,M:1},"源":{R:89,L:11},"火":{R:50,L:50},"用":{R:64,L:36,M:1},"的":{R:98,L:2,M:1},"相":{R:34,L:66,M:1},"知":{R:68,L:32,M:1},"石":{R:71,L:29,M:1},"祭":{R:56,L:44,M:1},"秤":{R:1},"穹":{R:50,L:50},"端":{R:75,L:25},"第":{R:7,L:93},"算":{R:58,L:42,M:1},"節":{R:82,L:18},"糞":{R:40,L:60},"罪":{R:59,L:41,M:1},"肢":{R:75,L:25,M:1},"腦":{R:33,L:67},"膛":{R:1},"臉":{R:82,L:18},"船":{R:63,L:38},"蓋":{R:41,L:59},"衣":{R:79,L:21,M:1},"表":{R:63,L:38},"裝":{R:39,L:61},"論":{R:68,L:32,M:1},"諭":{R:67,L:33},"越":{R:42,L:58,M:1},"車":{R:70,L:30,M:1},"造":{R:55,L:45,M:1},"達":{R:65,L:35},"還":{R:27,L:73,M:1},"都":{R:30,L:70,M:1},"閂":{R:1},"院":{R:55,L:45},"除":{R:47,L:53},"鞋":{R:80,L:20},"香":{R:44,L:56},"馬":{R:51,L:49,M:1},"騰":{R:80,L:20},"令":{R:67,L:33,M:1},"伏":{R:64,L:36},"保":{R:46,L:54},"兒":{R:89,L:11,M:1},"吧":{R:1},"問":{R:82,L:18},"垂":{R:29,L:71},"塵":{R:50,L:50},"妻":{R:85,L:15},"得":{R:66,L:34,M:1},"拜":{R:78,L:22},"榻":{R:1},"毒":{R:42,L:58,M:1},"泉":{R:40,L:60},"海":{R:39,L:61},"網":{R:64,L:36},"腳":{R:63,L:38,M:1},"落":{R:71,L:29},"蛋":{R:67,L:33},"詔":{R:50,L:50},"賤":{R:80,L:20},"跪":{R:20,L:80},"鋪":{R:22,L:78},"鍋":{R:67,L:33},"降":{R:41,L:59},"雨":{R:83,L:17},"雪":{R:60,L:40,M:1},"雹":{R:67,L:33},"不":{L:85,R:15,M:1},"久":{R:78,L:22},"乏":{R:67,L:33},"亂":{R:75,L:25,M:1},"以":{R:45,L:55,M:1},"休":{R:43,L:57},"但":{R:7,L:93,M:1},"住":{R:80,L:20},"使":{R:53,L:47,M:1},"依":{R:50,L:50},"便":{R:32,L:68},"倒":{R:50,L:50,M:1},"偏":{R:21,L:79},"備":{R:53,L:47,M:1},"傷":{R:73,L:27},"免":{R:42,L:58},"入":{R:55,L:45},"全":{R:23,L:77,M:1},"再":{R:8,L:92},"冷":{R:36,L:64},"准":{R:50,L:50},"利":{R:55,L:45,M:1},"勝":{R:78,L:22,M:1},"厭":{R:50,L:50,M:1},"及":{R:50,L:50,M:1},"取":{R:51,L:49,M:1},"受":{R:37,L:63,M:1},"叫":{R:70,L:30},"可":{R:25,L:75,M:1},"吃":{R:48,L:52,M:1},"吝":{R:33,L:67},"善":{R:43,L:57,M:1},"喜":{R:50,L:50,M:1},"喝":{R:38,L:62,M:1},"單":{R:19,L:81},"在":{R:62,L:38,M:1},"壞":{R:73,L:27},"外":{R:47,L:53,M:1},"多":{R:38,L:62,M:1},"夠":{R:63,L:38,M:1},"失":{R:48,L:52},"如":{R:30,L:70,M:1},"嫁":{R:38,L:63},"孝":{R:25,L:75},"學":{R:54,L:46,M:1},"守":{R:45,L:55,M:1},"安":{R:35,L:65,M:1},"宜":{R:1},"宣":{R:11,L:89},"容":{R:56,L:44,M:1},"實":{R:50,L:50,M:1},"審":{R:43,L:57},"少":{R:59,L:41,M:1},"居":{R:59,L:41},"屈":{R:63,L:38},"常":{R:38,L:62,M:1},"干":{R:53,L:47},"強":{R:33,L:68},"很":{R:35,L:65},"復":{R:37,L:63,M:1},"必":{R:40,L:60,M:1},"忍":{R:31,L:69,M:1},"忘":{R:20,L:80,M:1},"忠":{R:17,L:83},"快":{R:49,L:51,M:1},"怕":{R:61,L:39},"思":{R:43,L:57},"急":{R:50,L:50},"息":{R:89,L:11,M:1},"悅":{R:1},"悔":{R:83,L:17},"情":{R:69,L:31,M:1},"惜":{R:1},"惡":{R:40,L:60,M:1},"愛":{R:53,L:47,M:1},"慣":{R:50,L:50},"懂":{R:60,L:40},"懈":{R:50,L:50},"應":{R:42,L:58},"懼":{R:80,L:20},"抱":{R:25,L:75},"抵":{R:33,L:67},"拘":{R:17,L:83},"拿":{R:40,L:60,M:1},"按":{R:24,L:76},"掉":{R:63,L:37},"接":{R:29,L:71,M:1},"揚":{R:75,L:25},"收":{R:27,L:73},"改":{R:31,L:69},"救":{R:36,L:64},"敗":{R:60,L:40},"敢":{R:63,L:38,M:1},"敬":{R:59,L:41},"敵":{R:38,L:62},"料":{R:85,L:15},"斷":{R:58,L:42},"早":{R:38,L:62},"明":{R:49,L:51,M:1},"曾":{R:29,L:71},"朽":{R:25,L:75},"止":{R:71,L:29},"正":{R:39,L:61,M:1},"歸":{R:52,L:48},"殺":{R:70,L:30},"求":{R:48,L:52},"治":{R:63,L:38},"沾":{R:20,L:80},"法":{R:60,L:40},"洗":{R:21,L:79,M:1},"深":{R:32,L:68},"清":{R:30,L:70,M:1},"減":{R:50,L:50},"滅":{R:65,L:35,M:1},"潔":{R:80,L:20},"為":{R:53,L:47,M:1},"然":{R:92,L:8,M:1},"照":{R:47,L:53},"熟":{R:44,L:56,M:1},"熱":{R:60,L:40},"爭":{R:31,L:69},"犯":{R:55,L:45},"獨":{R:24,L:76},"理":{R:61,L:39,M:1},"甘":{R:22,L:78,M:1},"甚":{R:32,L:68,M:1},"由":{R:70,L:30},"畏":{R:67,L:33},"留":{R:40,L:60,M:1},"疑":{R:77,L:23},"痛":{R:64,L:36},"登":{R:33,L:67},"盡":{R:70,L:30},"睡":{R:41,L:59,M:1},"短":{R:75,L:25},"破":{R:59,L:41},"禁":{R:67,L:33},"移":{R:56,L:44,M:1},"稱":{R:66,L:34,M:1},"穿":{R:24,L:76},"答":{R:71,L:29},"管":{R:61,L:39},"精":{R:17,L:83},"累":{R:56,L:44},"絕":{R:47,L:53},"給":{R:72,L:28,M:1},"缺":{R:33,L:67,M:1},"美":{R:42,L:58,M:1},"義":{R:60,L:40,M:1},"耐":{R:29,L:71,M:1},"肯":{R:60,L:40},"能":{R:52,L:48,M:1},"脫":{R:38,L:63},"致":{R:40,L:60,M:1},"花":{R:56,L:44,M:1},"著":{R:80,L:20,M:1},"虛":{R:18,L:82},"虧":{R:33,L:67},"衰":{R:13,L:88},"被":{R:50,L:50},"要":{R:34,L:66,M:1},"解":{R:55,L:45},"計":{R:81,L:19,M:1},"許":{R:59,L:41,M:1},"該":{R:43,L:57},"認":{R:29,L:71},"語":{R:95,L:5},"識":{R:58,L:42,M:1},"讓":{R:47,L:53},"買":{R:55,L:45},"賜":{R:58,L:42},"賣":{R:47,L:53,M:1},"賺":{R:25,L:75},"走":{R:50,L:50,M:1},"足":{R:75,L:25,M:1},"跌":{R:50,L:50},"跟":{R:45,L:55},"跳":{R:14,L:86},"輕":{R:25,L:75,M:1},"轉":{R:33,L:68,M:1},"辦":{R:78,L:22},"辭":{R:67,L:33},"退":{R:50,L:50},"透":{R:75,L:25},"遠":{R:56,L:44,M:1},"遲":{R:50,L:50},"配":{R:30,L:70},"醒":{R:71,L:29},"重":{R:52,L:48,M:1},"錯":{R:61,L:39},"長":{R:47,L:53,M:1},"關":{R:41,L:59,M:1},"隨":{R:17,L:83,M:1},"露":{R:64,L:36,M:1},"靜":{R:69,L:31},"靠":{R:67,L:33},"順":{R:38,L:62},"願":{R:67,L:33},"顧":{R:56,L:44},"食":{R:81,L:19,M:1},"餓":{R:50,L:50},"饒":{R:33,L:67},"高":{R:39,L:61,M:1},"且":{L:57,R:43},"自":{R:17,L:83,M:1},"俗":{R:78,L:22},"務":{R:50,L:50},"界":{R:94,L:6,M:1},"丟":{L:1},"棄":{R:77,L:23},"並":{L:98,R:2,M:1},"吞":{R:50,L:50},"已":{R:39,L:61},"從":{R:46,L:54},"未":{R:29,L:71,M:1},"沒":{R:60,L:40,M:1},"無":{R:17,L:83,M:1},"立":{R:51,L:49,M:1},"結":{R:45,L:55},"與":{R:55,L:45,M:1},"非":{R:56,L:44,M:1},"亞":{R:48,L:52,M:1},"原":{R:25,L:75},"堅":{R:7,L:93},"尊":{R:38,L:63,M:1},"廢":{R:50,L:50},"建":{R:58,L:42},"招":{R:18,L:82},"數":{R:79,L:21,M:1},"最":{R:12,L:88},"果":{R:50,L:50,M:1},"極":{R:48,L:52},"波":{R:27,L:73},"派":{R:59,L:41},"游":{R:14,L:86},"焦":{R:67,L:33},"背":{R:29,L:71,M:1},"腹":{R:83,L:17},"興":{R:61,L:39},"藏":{R:59,L:41},"街":{R:50,L:50,M:1},"裂":{R:67,L:33},"觀":{R:69,L:31},"選":{R:42,L:58,M:1},"金":{R:48,L:52},"囑":{R:67,L:33},"婦":{R:87,L:13},"宰":{R:50,L:50},"我":{R:37,L:63,M:1},"教":{R:69,L:31},"母":{R:77,L:23,M:1},"眼":{R:68,L:32,M:1},"臣":{R:71,L:29},"親":{R:28,L:72,M:1},"謀":{R:47,L:53},"運":{R:38,L:62},"領":{R:31,L:69},"乃":{L:75,R:25},"縵":{R:1},"之":{L:74,R:26,M:1},"二":{R:28,L:72,M:1},"先":{R:42,L:58,M:1},"內":{R:53,L:47,M:1},"初":{R:50,L:50,M:1},"力":{R:77,L:23,M:1},"勢":{R:79,L:21,M:1},"師":{R:89,L:11},"恩":{R:52,L:48,M:1},"所":{R:41,L:59,M:1},"樂":{R:55,L:45,M:1},"氣":{R:71,L:29,M:1},"父":{R:50,L:50},"神":{R:68,L:32},"約":{R:54,L:46},"至":{R:29,L:71,M:1},"苦":{R:51,L:49},"輩":{R:1},"風":{R:49,L:51,M:1},"倦":{R:1},"困":{R:38,L:62,M:1},"乖":{L:75,R:25},"僻":{R:75,L:25},"巧":{R:54,L:46,M:1},"謬":{R:75,L:25},"乘":{L:67,R:33},"九":{L:69,R:31,M:1},"因":{R:52,L:48,M:1},"太":{R:29,L:71,M:1},"請":{R:21,L:79},"難":{R:56,L:44,M:1},"乳":{L:83,R:17},"哺":{R:50,L:50},"養":{R:48,L:52},"乾":{L:50,R:50},"燥":{R:67,L:33},"戰":{R:42,L:58,M:1},"竄":{R:1},"嗎":{R:93,L:7},"奉":{R:33,L:67},"後":{R:53,L:47},"互":{L:1},"五":{L:64,R:36,M:1},"六":{R:32,L:68,M:1},"臟":{R:50,L:50},"井":{L:20,R:80},"亙":{L:1},"微":{R:62,L:38,M:1},"伯":{R:80,L:20,M:1},"倫":{R:1},"克":{R:33,L:67},"拉":{R:40,L:60,M:1},"軍":{R:59,L:41},"述":{R:50,L:50,M:1},"那":{R:14,L:86,M:1},"亡":{L:9,R:91},"羊":{R:54,L:46,M:1},"付":{R:50,L:50},"往":{R:53,L:47},"易":{R:78,L:22,M:1},"納":{R:46,L:54},"亥":{L:1},"亨":{L:50,R:50,M:1},"享":{L:50,R:50},"福":{R:69,L:31},"京":{L:67,R:33},"亭":{L:50,R:50},"們":{R:1,M:1},"參":{R:50,L:50},"呢":{R:91,L:9},"命":{R:76,L:24,M:1},"啊":{R:83,L:17},"形":{R:50,L:50},"徒":{R:61,L:39},"性":{R:60,L:40,M:1},"戶":{R:76,L:24,M:1},"擦":{R:20,L:80},"格":{R:33,L:67},"權":{R:59,L:41},"欠":{R:60,L:40},"民":{R:51,L:49,M:1},"煙":{R:50,L:50,M:1},"牧":{R:25,L:75,M:1},"皆":{R:50,L:50},"眾":{R:64,L:36},"罵":{R:71,L:29},"肉":{R:70,L:30},"肌":{R:1},"膏":{R:75,L:25,M:1},"迎":{R:14,L:86},"什":{L:50,R:50,M:1},"麼":{R:92,L:8,M:1},"仁":{L:67,R:33},"慈":{R:33,L:67},"仆":{L:50,R:50},"仇":{L:43,R:57,M:1},"恨":{R:75,L:25},"今":{L:60,R:40},"介":{L:1,M:1},"仍":{L:93,R:7},"舊":{R:45,L:55},"仔":{L:1},"細":{R:45,L:55,M:1},"他":{L:46,R:54,M:1},"又":{R:20,L:80},"境":{R:67,L:33},"每":{R:14,L:86},"竟":{R:33,L:67},"總":{R:11,L:89},"仗":{L:50,R:50},"賴":{R:1},"替":{R:25,L:75},"筆":{R:75,L:25},"你":{R:54,L:46,M:1},"典":{R:50,L:50},"遵":{R:13,L:88},"其":{R:57,L:43,M:1},"北":{R:47,L:53},"南":{R:47,L:53,M:1},"憑":{R:56,L:44},"撒":{R:24,L:76,M:1},"東":{R:30,L:70,M:1},"此":{R:63,L:37,M:1},"示":{R:70,L:30},"西":{R:33,L:67,M:1},"諾":{R:1},"防":{R:38,L:63},"雲":{R:61,L:39},"仰":{L:83,R:17},"慕":{R:78,L:22},"何":{R:24,L:76,M:1},"職":{R:63,L:38},"仿":{L:50,R:50},"伊":{L:1},"甸":{R:50,L:50,M:1},"伍":{L:33,R:67},"兵":{R:77,L:23,M:1},"伐":{L:50,R:50},"估":{L:1},"價":{R:75,L:25},"伸":{L:90,R:10},"冤":{R:60,L:40},"延":{R:50,L:50},"訴":{R:67,L:33,M:1},"伺":{L:50,R:50},"候":{R:75,L:25},"似":{L:71,R:29},"乎":{R:1,M:1},"她":{R:69,L:31,M:1},"這":{R:11,L:89,M:1},"低":{L:58,R:42,M:1},"窪":{R:67,L:33,M:1},"宅":{R:80,L:20},"佔":{L:56,R:44},"據":{R:60,L:40},"嘗":{R:67,L:33},"妨":{R:50,L:50},"屬":{R:57,L:43},"況":{R:67,L:33},"羅":{R:41,L:59,M:1},"伴":{R:1},"假":{R:35,L:65,M:1},"別":{R:50,L:50,M:1},"勞":{R:58,L:42,M:1},"夢":{R:38,L:63,M:1},"孽":{R:1},"官":{R:67,L:33},"客":{R:36,L:64},"工":{R:63,L:37,M:1},"摩":{R:33,L:67,M:1},"歹":{R:80,L:20},"活":{R:43,L:57,M:1},"禮":{R:47,L:53,M:1},"詩":{R:50,L:50},"真":{R:24,L:76,M:1},"若":{R:15,L:85},"佩":{L:1},"劍":{R:1},"戴":{R:44,L:56},"佯":{L:1},"偶":{R:57,L:43},"音":{R:79,L:21},"君":{R:70,L:30},"喚":{R:75,L:25,M:1},"它":{R:40,L:60},"怒":{R:67,L:33},"智":{R:50,L:50,M:1},"者":{R:95,L:5},"酒":{R:66,L:34,M:1},"夏":{R:57,L:43},"找":{R:38,L:63,M:1},"抓":{R:50,L:50,M:1},"玩":{R:67,L:33},"臨":{R:27,L:73},"侍":{L:50,R:50},"衛":{R:27,L:73,M:1},"侮":{L:1},"慢":{R:71,L:29,M:1},"辱":{R:80,L:20},"侵":{L:83,R:17},"奪":{R:60,L:40},"溺":{R:1},"罷":{R:40,L:60},"蒙":{R:39,L:61},"俊":{L:1},"秀":{R:33,L:67},"俏":{L:1},"佑":{R:1},"狀":{R:80,L:20},"護":{R:40,L:60,M:1},"障":{R:1},"念":{R:70,L:30},"修":{L:73,R:27},"補":{R:50,L:50},"飾":{R:83,L:17},"俯":{L:83,R:17},"察":{R:71,L:29,M:1},"俱":{L:1},"俸":{L:50,R:50},"祿":{R:1},"倉":{L:67,R:33},"庫":{R:70,L:30},"嚼":{R:25,L:75},"塌":{R:40,L:60},"斃":{R:1},"牙":{R:67,L:33,M:1},"臥":{R:67,L:33},"倘":{L:1},"或":{R:23,L:77},"倚":{L:1},"借":{L:1},"債":{R:80,L:20},"貸":{R:1},"錢":{R:73,L:27},"充":{R:38,L:63},"冒":{R:13,L:88},"話":{R:83,L:17,M:1},"待":{R:75,L:25},"斜":{R:1},"邪":{R:30,L:70},"做":{L:45,R:55},"泊":{R:1},"健":{L:33,R:67},"壯":{R:47,L:53},"側":{L:60,R:40},"耳":{R:53,L:47,M:1},"偷":{L:86,R:14},"盜":{R:67,L:33},"竊":{R:1},"傍":{L:1},"晚":{R:60,L:40,M:1},"飯":{R:69,L:31,M:1},"催":{L:75,R:25},"促":{R:1},"趕":{R:10,L:90},"逼":{R:40,L:60},"傲":{L:17,R:83},"送":{R:29,L:71,M:1},"害":{R:79,L:21,M:1},"損":{R:55,L:45},"痕":{R:50,L:50},"傾":{L:1},"覆":{R:1,M:1},"僅":{L:75,R:25},"貌":{R:1,M:1},"值":{R:1},"銀":{R:44,L:56,M:1},"儀":{L:33,R:67},"償":{L:1},"儹":{L:1},"允":{L:67,R:33},"元":{L:83,R:17,M:1},"始":{R:71,L:29,M:1},"孫":{R:73,L:27,M:1},"帥":{R:1},"兄":{L:30,R:70,M:1},"台":{R:67,L:33},"弟":{R:78,L:22},"飢":{R:33,L:67},"兆":{L:25,R:75},"攻":{R:39,L:61},"祖":{R:40,L:60,M:1},"鋒":{R:50,L:50},"景":{R:67,L:33},"榮":{R:40,L:60},"滑":{R:50,L:50,M:1},"潤":{R:1},"禿":{R:25,L:75},"耀":{R:60,L:40},"華":{R:29,L:71},"輝":{R:50,L:50},"陰":{R:33,L:67},"顯":{R:33,L:67},"制":{R:67,L:33},"己":{R:83,L:17,M:1},"斯":{R:90,L:10,M:1},"兌":{L:1},"換":{R:46,L:54},"刑":{R:75,L:25,M:1},"歌":{R:73,L:27},"兔":{L:1},"土":{R:56,L:44},"室":{R:78,L:22},"宮":{R:50,L:50},"帳":{R:57,L:43},"營":{R:82,L:18},"牢":{R:30,L:70},"聖":{R:16,L:84},"迷":{R:23,L:77,M:1},"骨":{R:61,L:39},"屋":{R:67,L:33},"憂":{R:36,L:64},"監":{R:40,L:60},"設":{R:29,L:71,M:1},"豎":{R:25,L:75},"副":{R:33,L:67},"盛":{R:64,L:36},"省":{R:45,L:55},"翼":{R:1},"腿":{R:75,L:25},"舌":{R:67,L:33},"八":{L:82,R:18,M:1},"侯":{R:1},"判":{R:38,L:63,M:1},"堂":{R:88,L:13},"廳":{R:1},"牛":{R:39,L:61},"畜":{R:50,L:50},"聚":{R:31,L:69},"器":{R:78,L:22},"具":{L:25,R:75},"章":{R:67,L:33},"籍":{R:50,L:50},"兼":{L:1},"娶":{R:44,L:56},"添":{R:67,L:33},"講":{R:56,L:44},"險":{R:67,L:33,M:1},"冕":{L:50,R:50},"旒":{R:1},"冬":{L:67,R:33},"冰":{L:67,R:33},"冶":{L:1},"煉":{R:67,L:33},"淡":{R:33,L:67},"凋":{L:1},"殘":{R:22,L:78},"謝":{R:64,L:36},"凌":{L:67,R:33},"凝":{L:1},"凡":{L:88,R:12},"凱":{L:1},"凳":{L:1},"凶":{L:1},"猛":{R:29,L:71},"凸":{L:1},"奇":{R:27,L:73},"尖":{R:25,L:75},"巡":{R:20,L:80},"征":{R:50,L:50,M:1},"捐":{R:14,L:86},"擔":{R:40,L:60},"於":{R:71,L:29,M:1},"汗":{R:25,L:75},"現":{R:27,L:73,M:1},"產":{R:59,L:41,M:1},"線":{R:78,L:22},"聘":{R:40,L:60},"藍":{R:40,L:60},"血":{R:31,L:69},"謎":{R:50,L:50},"貨":{R:75,L:25},"鞘":{R:1},"刺":{R:60,L:40},"槍":{R:56,L:44},"封":{R:29,L:71},"岔":{R:50,L:50},"散":{R:64,L:36,M:1},"毫":{R:40,L:60,M:1},"贓":{R:50,L:50},"辨":{R:33,L:67},"割":{R:33,L:67},"齒":{R:1},"杖":{R:43,L:57},"罰":{R:86,L:14},"邦":{R:67,L:33,M:1},"創":{R:25,L:75},"速":{R:56,L:44},"案":{R:75,L:25},"刨":{L:1},"挖":{R:14,L:86},"基":{R:29,L:71,M:1},"率":{R:80,L:20},"益":{R:78,L:22,M:1},"刪":{L:1},"刮":{L:1},"底":{R:67,L:33,M:1},"期":{R:60,L:40},"老":{R:23,L:78,M:1},"部":{R:1},"度":{R:75,L:25,M:1},"草":{R:61,L:39,M:1},"剃":{L:1},"削":{L:1},"弱":{R:1},"幾":{R:32,L:68,M:1},"戲":{R:30,L:70},"略":{R:56,L:44,M:1},"震":{R:50,L:50},"額":{R:33,L:67},"驅":{R:50,L:50},"剖":{L:1},"剛":{L:92,R:8},"勇":{R:44,L:56},"愎":{R:1},"硬":{R:67,L:33},"剝":{L:75,R:25},"皮":{R:45,L:55,M:1},"剩":{L:50,R:50,M:1},"剪":{L:83,R:17},"毛":{R:64,L:36},"劃":{L:67,R:33},"劇":{L:1},"劈":{L:1},"柴":{R:1},"功":{L:33,R:67},"效":{R:50,L:50},"勉":{R:50,L:50},"增":{R:40,L:60},"沙":{R:35,L:65},"助":{L:20,R:80},"推":{R:8,L:92},"努":{L:1},"劬":{L:1},"勃":{L:1},"士":{R:82,L:18,M:1},"勵":{R:67,L:33},"勒":{L:62,R:38,M:1},"索":{R:78,L:22},"贖":{R:33,L:67,M:1},"追":{R:14,L:86},"搖":{R:17,L:83},"農":{R:25,L:75},"碌":{R:67,L:33},"勤":{L:50,R:50},"勸":{L:67,R:33},"化":{R:64,L:36},"導":{R:1},"慰":{R:67,L:33},"戒":{R:67,L:33},"勾":{L:1},"引":{R:39,L:61,M:1},"括":{R:1},"袱":{R:1},"裹":{R:50,L:50},"匉":{L:1},"訇":{R:1},"匕":{L:1},"斗":{R:67,L:33},"匣":{L:1},"匪":{L:1},"午":{L:86,R:14,M:1},"截":{R:1},"腰":{R:31,L:69},"載":{R:83,L:17},"卑":{L:83,R:17},"協":{L:1},"博":{L:1},"卡":{L:1},"記":{R:50,L:50,M:1},"危":{L:1},"即":{L:88,R:13},"卸":{L:75,R:25},"厚":{L:67,R:33},"煩":{R:44,L:56},"厲":{L:50,R:50},"疾":{R:83,L:17,M:1},"叉":{L:40,R:60},"友":{L:33,R:67,M:1},"鄰":{R:38,L:63},"叛":{R:60,L:40},"咬":{R:18,L:82},"叔":{L:75,R:25},"暖":{R:67,L:33},"財":{R:70,L:30,M:1},"壓":{R:35,L:65},"寒":{R:57,L:43},"災":{R:25,L:75,M:1},"田":{R:57,L:43},"禍":{R:75,L:25},"窘":{R:67,L:33},"窮":{R:50,L:50},"訓":{R:29,L:71},"責":{R:62,L:38},"賄":{R:33,L:67},"驚":{R:27,L:73},"逆":{R:50,L:50},"叢":{L:60,R:40},"林":{R:67,L:33,M:1},"雜":{R:43,L:57},"渴":{R:50,L:50},"糧":{R:63,L:38},"談":{R:86,L:14},"辯":{R:40,L:60},"巴":{R:31,L:69,M:1},"米":{R:63,L:38},"另":{L:1},"叩":{L:1},"喊":{R:56,L:44},"召":{L:20,R:80},"恥":{R:83,L:17},"悲":{R:44,L:56},"憎":{R:33,L:67},"憐":{R:43,L:57},"欺":{R:20,L:80,M:1},"鄙":{R:50,L:50},"叱":{L:1},"史":{L:75,R:25,M:1},"右":{L:73,R:27,M:1},"司":{L:64,R:36},"獄":{R:1},"叼":{L:1},"奶":{R:50,L:50},"完":{R:50,L:50,M:1},"素":{R:33,L:67},"飽":{R:29,L:71,M:1},"魚":{R:58,L:42,M:1},"各":{L:85,R:15,M:1},"式":{R:1},"適":{R:1},"吉":{L:86,R:14},"吊":{L:1,M:1},"僚":{R:1},"埋":{R:44,L:56},"射":{R:13,L:88},"業":{R:1},"盟":{R:75,L:25},"目":{R:57,L:43},"號":{R:54,L:46},"譽":{R:1},"錄":{R:1},"后":{L:50,R:50},"妃":{R:50,L:50},"吐":{L:67,R:33,M:1},"穗":{R:75,L:25},"左":{R:10,L:90},"嗇":{R:1},"噬":{R:1},"否":{L:50,R:50},"吩":{L:1},"咐":{R:1},"含":{L:1},"笑":{R:58,L:42,M:1},"羞":{R:44,L:56,M:1},"吵":{L:50,R:50},"嚷":{R:67,L:33},"吶":{L:1},"吸":{L:1},"飲":{R:67,L:33},"噓":{R:50,L:50},"笛":{R:1},"吼":{L:67,R:33},"呈":{L:67,R:33},"誡":{R:1},"喃":{R:1},"周":{L:1},"圍":{R:20,L:80},"呼":{L:58,R:42},"咆":{L:1},"哮":{R:1},"奸":{R:43,L:57},"密":{R:53,L:47},"寶":{R:41,L:59,M:1},"熊":{R:1},"睦":{R:1},"調":{R:17,L:83},"議":{R:38,L:63},"雅":{R:67,L:33},"雇":{R:25,L:75},"黃":{R:22,L:78},"咒":{L:43,R:57},"詛":{R:1},"碎":{R:82,L:18},"咽":{L:1},"哀":{L:80,R:20},"哉":{R:1},"哭":{R:64,L:36},"慟":{R:50,L:50},"鳴":{R:80,L:20},"哄":{L:50,R:50},"騙":{R:60,L:40},"哈":{L:82,R:18},"尼":{R:60,L:40,M:1},"薩":{R:60,L:40},"哥":{L:75,R:25,M:1},"德":{R:69,L:31},"泣":{R:1},"哲":{L:67,R:33},"唯":{L:1},"恐":{R:33,L:67},"唱":{L:71,R:29},"唾":{L:1},"沫":{R:67,L:33},"商":{L:63,R:38},"埠":{R:1},"賈":{R:1},"啞":{L:75,R:25},"啟":{L:1},"啼":{L:1},"良":{R:36,L:64},"喇":{L:1},"喉":{L:1},"嚨":{R:1},"喘":{L:50,R:50},"歡":{R:37,L:63,M:1},"筵":{R:67,L:33},"醉":{R:57,L:43,M:1},"喧":{L:1},"嘩":{R:1},"喪":{L:71,R:29},"膽":{R:60,L:40},"擺":{R:13,L:88},"嗉":{L:1},"嗤":{L:1},"嘔":{L:1},"嘲":{L:1},"嘴":{L:27,R:73,M:1},"嘻":{L:1},"械":{R:1},"皿":{R:1},"噴":{L:1,M:1},"嚏":{R:1},"鼻":{R:60,L:40,M:1},"嚇":{L:40,R:60},"嚴":{L:78,R:22},"緊":{R:38,L:62,M:1},"肅":{R:33,L:67},"霜":{R:1},"鬧":{R:1},"爛":{R:1},"環":{R:60,L:40},"囊":{L:67,R:33},"囚":{L:50,R:50},"稟":{R:25,L:75},"而":{R:11,L:89,M:1},"憊":{R:1},"固":{L:67,R:33},"帑":{R:1},"牆":{R:64,L:36,M:1},"繞":{R:45,L:55},"裙":{R:50,L:50},"園":{L:47,R:53},"囿":{R:1},"圓":{L:67,R:33},"頂":{R:50,L:50,M:1},"坑":{R:75,L:25},"質":{R:86,L:14},"押":{R:25,L:75},"某":{R:17,L:83},"逃":{R:19,L:81},"鄉":{R:44,L:56,M:1},"陳":{R:29,L:71},"幔":{R:50,L:50},"洞":{R:50,L:50},"球":{R:1},"穴":{R:1},"均":{L:1},"坍":{L:1},"墊":{R:1},"坎":{R:1},"坦":{L:25,R:75},"涎":{R:1},"埃":{L:80,R:20},"塞":{R:43,L:57,M:1},"怨":{R:33,L:67},"葬":{R:75,L:25},"池":{R:67,L:33},"邑":{R:33,L:67},"郊":{R:1},"執":{L:1},"政":{R:60,L:40},"培":{L:67,R:33},"植":{R:67,L:33},"址":{R:1},"督":{R:50,L:50,M:1},"色":{R:86,L:14,M:1},"壘":{R:1},"持":{R:60,L:40,M:1},"革":{R:50,L:50},"積":{R:38,L:63},"集":{R:83,L:17},"堵":{L:67,R:33},"陷":{R:33,L:67},"塔":{L:1},"填":{L:1},"墓":{L:75,R:25},"碑":{R:1},"墜":{L:1},"胎":{R:88,L:13},"墨":{L:60,R:40},"盒":{R:67,L:33},"黑":{R:53,L:47,M:1},"墩":{L:33,R:67,M:1},"墮":{L:1},"墳":{L:75,R:25},"塋":{R:1},"墾":{L:50,R:50},"荒":{R:25,L:75},"榨":{R:1},"壕":{L:1},"溝":{R:1},"毀":{R:63,L:38},"壽":{L:40,R:60},"娃":{R:1},"患":{R:62,L:38},"甥":{R:1},"腎":{R:50,L:50},"袍":{R:50,L:50},"郭":{R:1},"寡":{R:43,L:57},"愁":{R:36,L:64},"瑪":{R:40,L:60},"病":{R:75,L:25,M:1},"鷹":{R:86,L:14},"遺":{R:13,L:88},"布":{R:57,L:43,M:1},"志":{R:56,L:44,M:1},"旗":{R:43,L:57},"殿":{R:50,L:50},"河":{R:36,L:64},"浪":{R:71,L:29},"溪":{R:33,L:67},"牌":{R:75,L:25},"碗":{R:1},"紅":{R:41,L:59,M:1},"翁":{R:1},"英":{R:33,L:67},"豐":{R:17,L:83,M:1},"麥":{R:56,L:44},"龍":{R:67,L:33},"囯":{R:1},"涯":{R:1},"象":{R:44,L:56},"鵝":{R:1},"陽":{R:33,L:67},"夭":{L:1},"央":{L:1},"夾":{L:1},"妙":{R:1},"怪":{R:50,L:50},"異":{R:27,L:73},"承":{R:38,L:63,M:1},"契":{L:1},"奔":{L:64,R:36,M:1},"跑":{R:30,L:70},"奠":{L:75,R:25},"奢":{L:1},"奧":{L:50,R:50},"秘":{R:50,L:50},"獲":{R:1,M:1},"奮":{L:1},"婿":{R:1},"孩":{R:67,L:33,M:1},"奴":{L:1},"婢":{R:50,L:50},"役":{R:80,L:20},"媽":{R:1},"餅":{R:1},"詐":{R:60,L:40},"施":{R:30,L:70},"泥":{R:67,L:33},"嬪":{R:1},"妄":{L:64,R:36},"妒":{L:67,R:33},"紛":{R:50,L:50,M:1},"妓":{L:67,R:33},"妝":{L:1},"奩":{R:1},"妥":{L:40,R:60},"礙":{R:75,L:25},"妹":{L:33,R:67},"妾":{R:1},"姆":{L:1},"姊":{L:50,R:50},"終":{R:31,L:69},"姐":{L:1},"姑":{L:1},"姓":{L:50,R:50},"委":{L:1},"婉":{R:50,L:50},"曲":{R:1,M:1},"姨":{L:1},"威":{L:71,R:29},"武":{R:67,L:33},"娘":{L:1,M:1},"娼":{L:1},"婆":{L:40,R:60},"婚":{L:1},"姻":{R:1},"媳":{L:1},"嫂":{L:1},"嫉":{L:1},"嫌":{L:67,R:33},"隙":{R:1},"嫩":{L:40,R:60,M:1},"芽":{R:1},"嬉":{L:1},"嬌":{L:1},"嬰":{L:67,R:33},"尚":{R:17,L:83},"彈":{R:25,L:75},"谷":{R:63,L:38},"孔":{L:50,R:50},"雀":{R:50,L:50},"孕":{L:25,R:75},"孤":{L:1},"寂":{R:33,L:67},"童":{R:57,L:43},"孳":{L:1},"習":{R:33,L:67},"宇":{L:33,R:67},"宙":{R:1},"娜":{R:1},"寧":{R:25,L:75},"康":{R:33,L:67},"撫":{R:50,L:50},"穩":{R:44,L:56},"置":{R:17,L:83},"舒":{R:25,L:75},"逸":{R:67,L:33},"靖":{R:67,L:33},"畢":{R:1},"吏":{R:1},"員":{R:1},"睛":{R:1},"規":{R:36,L:64,M:1},"店":{R:50,L:50},"旅":{R:1},"讀":{R:50,L:50},"府":{R:80,L:20},"宴":{L:33,R:67},"僮":{R:1},"庭":{R:1},"眷":{R:43,L:57},"譜":{R:67,L:33},"寄":{L:1},"旨":{R:83,L:17},"富":{L:78,R:22,M:1},"裕":{R:1},"貴":{R:50,L:50},"暑":{R:1},"寓":{L:1},"考":{R:50,L:50},"誠":{R:64,L:36},"跡":{R:1},"寬":{L:86,R:14},"宏":{R:1},"廣":{R:33,L:67},"恕":{R:67,L:33},"敞":{R:33,L:67},"暢":{R:67,L:33},"窄":{R:40,L:60},"闊":{R:1},"限":{R:64,L:36,M:1},"寵":{L:50,R:50},"玉":{R:75,L:25},"貝":{R:1},"鎖":{R:44,L:56},"閉":{R:38,L:63},"近":{R:61,L:39},"專":{L:75,R:25},"崇":{R:33,L:67},"尋":{L:79,R:21},"訪":{R:33,L:67},"俄":{R:1,M:1},"抗":{R:50,L:50},"巷":{R:67,L:33},"貧":{R:38,L:63},"雞":{R:67,L:33},"鹿":{R:1},"男":{R:17,L:83,M:1},"搭":{R:29,L:71},"痊":{R:50,L:50},"醫":{R:43,L:57},"尺":{L:1},"寸":{R:1},"尾":{L:50,R:50,M:1},"局":{L:50,R:50},"枉":{R:25,L:75},"膝":{R:75,L:25,M:1},"屏":{L:1},"翅":{R:50,L:50},"屢":{L:1},"寨":{R:1},"岡":{R:50,L:50},"峰":{R:1},"崖":{R:1},"崩":{R:50,L:50},"嶺":{R:67,L:33},"陵":{R:67,L:33},"岳":{L:1},"島":{L:33,R:67},"峻":{L:1},"崎":{L:1},"嶇":{R:1},"崽":{L:1},"川":{L:1},"邏":{R:1},"巢":{L:50,R:50},"窩":{R:75,L:25},"匠":{R:1},"巨":{L:1},"巫":{L:1},"術":{R:86,L:14},"遣":{R:25,L:75},"巳":{L:1},"特":{R:29,L:71},"頓":{R:33,L:67},"市":{L:50,R:50},"疋":{R:1},"希":{L:1},"臘":{R:50,L:50,M:1},"帕":{L:1},"帖":{L:50,R:50},"傅":{R:1},"幕":{R:1},"棚":{R:83,L:17},"帷":{L:1},"帽":{L:1},"預":{R:14,L:86},"白":{R:36,L:64,M:1},"幼":{R:33,L:67},"末":{R:21,L:79,M:1},"紀":{R:50,L:50},"邁":{R:1},"幻":{L:50,R:50},"影":{R:56,L:44},"幽":{L:1},"冥":{R:1},"暗":{R:33,L:67,M:1},"庇":{L:25,R:75,M:1},"艙":{R:50,L:50},"庶":{L:1},"泰":{R:1},"廁":{L:50,R:50},"廉":{L:1},"廊":{L:67,R:33},"廟":{L:1},"弄":{L:22,R:78,M:1},"弊":{L:1},"弓":{L:33,R:67},"誘":{R:25,L:75},"琴":{R:50,L:50},"暴":{R:33,L:67,M:1},"橫":{R:40,L:60},"迫":{R:80,L:20},"項":{R:80,L:20},"彎":{L:75,R:25,M:1},"彩":{L:67,R:33},"彰":{L:1},"彼":{L:1,M:1},"昔":{R:33,L:67},"返":{R:25,L:75},"徇":{L:50,R:50},"徐":{L:1},"獎":{R:50,L:50},"江":{R:60,L:40},"御":{L:1},"徵":{L:1},"感":{R:56,L:44},"慌":{R:50,L:50,M:1},"懷":{R:33,L:67},"淨":{R:1},"疼":{R:57,L:43},"竅":{R:1},"腸":{R:50,L:50},"軟":{R:67,L:33},"靈":{R:33,L:67},"須":{R:20,L:80,M:1},"忌":{L:1},"忙":{L:33,R:67},"忤":{L:1},"誦":{R:50,L:50},"忽":{L:67,R:33},"忿":{L:57,R:43,M:1},"激":{R:20,L:80},"怎":{L:1,M:1},"斥":{R:67,L:33},"視":{R:1},"慮":{R:1},"躁":{R:1},"讟":{R:1},"恆":{L:80,R:20},"恤":{L:25,R:75},"惠":{R:67,L:33},"恭":{L:1},"恰":{L:1},"悄":{L:67,R:33,M:1},"悖":{L:1},"悟":{L:20,R:80},"慘":{R:67,L:33},"悶":{L:29,R:71,M:1},"誼":{R:1},"惑":{L:29,R:71},"劣":{R:1},"獸":{R:75,L:25},"貫":{R:1,M:1},"魔":{R:67,L:33},"惱":{L:50,R:50},"惶":{L:50,R:50},"惹":{L:75,R:25},"眉":{R:50,L:50,M:1},"愆":{L:33,R:67},"愈":{L:50,R:50},"拙":{R:1},"昧":{R:1,M:1},"蠢":{R:50,L:50},"頑":{R:33,L:67},"戀":{R:43,L:57},"慚":{L:33,R:67,M:1},"愧":{R:1},"慧":{L:50,R:50},"聰":{R:25,L:75},"慶":{L:1},"賀":{R:1},"憫":{R:1},"憔":{L:1},"悴":{R:1},"憤":{L:50,R:50},"懇":{L:1},"怠":{R:1},"驗":{R:83,L:17,M:1},"懊":{L:1},"懦":{L:1},"懲":{L:1},"懶":{L:1},"惰":{R:1},"懸":{L:75,R:25},"戈":{L:1},"矛":{R:1},"戍":{L:1},"戥":{L:1},"兢":{R:1,M:1},"抖":{R:67,L:33},"耍":{R:67,L:33},"戳":{L:1},"鵀":{R:1},"欲":{R:1},"需":{R:50,L:50},"巾":{R:1},"捧":{R:50,L:50},"臂":{R:1},"藝":{R:50,L:50,M:1},"鐲":{R:50,L:50},"黏":{R:50,L:50},"鼓":{R:60,L:40},"扎":{L:1},"扮":{R:1},"折":{R:56,L:44},"捆":{R:40,L:60},"掃":{R:13,L:88},"滾":{R:33,L:67},"獵":{R:25,L:75,M:1},"盹":{R:1},"鐵":{R:15,L:85},"雷":{R:40,L:60},"扔":{L:1},"托":{L:67,R:33},"扛":{L:1},"扭":{L:1},"扯":{L:1},"扶":{L:88,R:13},"犁":{R:1},"批":{L:1},"評":{R:1},"誰":{R:31,L:69},"技":{L:1},"抄":{L:1},"柄":{R:75,L:25},"投":{L:1},"拒":{R:67,L:33},"磨":{R:50,L:50},"披":{L:80,R:20},"肩":{R:40,L:60},"麻":{R:11,L:89},"抬":{L:83,R:17},"擋":{R:56,L:44},"抹":{L:1},"抽":{L:1},"瘋":{R:20,L:80},"拆":{L:1},"拇":{L:1,M:1},"疲":{R:25,L:75},"拋":{L:1},"擲":{R:50,L:50},"錨":{R:1},"拍":{L:67,R:33},"拐":{L:1},"拔":{L:78,R:22},"拖":{L:1},"束":{R:67,L:33},"拚":{L:1},"募":{R:1},"拯":{L:1},"拱":{L:1},"拳":{L:1},"拷":{L:1},"拾":{L:67,R:33,M:1},"摘":{R:25,L:75},"挑":{L:89,R:11},"唆":{R:1},"窟":{R:50,L:50},"挨":{L:1},"挪":{L:1},"挫":{L:1},"振":{L:1},"挺":{L:1},"挽":{L:1},"挾":{L:1},"禾":{R:17,L:83},"綁":{R:33,L:67},"捉":{L:75,R:25},"捏":{L:1},"貲":{R:50,L:50},"資":{R:25,L:75},"捕":{L:33,R:67},"捫":{L:1},"捶":{L:1},"胸":{R:20,L:80},"掀":{L:1},"帚":{R:1},"掄":{L:1},"授":{L:1},"握":{R:1},"舵":{R:1},"掏":{L:1},"掐":{L:1},"掘":{L:1},"掙":{L:1},"掠":{L:33,R:67},"探":{L:75,R:25},"窺":{R:17,L:83},"續":{R:1},"控":{L:1},"翻":{R:8,L:92},"諉":{R:1},"掩":{L:86,R:14},"蔽":{R:1},"措":{L:1},"插":{L:1},"揣":{L:1},"揪":{L:1},"揭":{L:1},"搓":{L:1},"撼":{R:1},"櫓":{R:1},"搗":{L:1},"搜":{L:1},"搬":{L:1},"搶":{L:83,R:17},"摔":{L:1},"跤":{R:1},"摟":{L:1},"摶":{L:1},"摺":{L:1},"疊":{R:1},"撇":{L:1},"撐":{L:1},"尿":{R:1},"謊":{R:40,L:60,M:1},"鹽":{R:40,L:60},"撕":{L:1},"撞":{L:83,R:17},"錘":{R:50,L:50},"撤":{L:1},"播":{L:1},"撿":{L:1},"擁":{L:50,R:50},"擠":{R:10,L:90},"擄":{L:1},"擅":{L:1},"擇":{L:50,R:50},"擊":{L:60,R:40,M:1},"練":{R:75,L:25},"擒":{L:67,R:33},"負":{R:63,L:38,M:1},"擘":{L:1},"粉":{R:40,L:60},"擬":{L:1},"擴":{L:1},"渡":{R:50,L:50},"擾":{L:40,R:60},"攆":{L:1},"攏":{L:50,R:50},"攔":{L:1},"阻":{R:20,L:80},"攙":{L:1},"攜":{L:1},"攪":{L:1},"吾":{R:1},"斂":{R:1},"殮":{R:1},"縱":{R:25,L:75},"肆":{R:50,L:50},"豬":{R:67,L:33},"鬆":{R:33,L:67},"故":{L:75,R:25},"敏":{L:1},"捷":{R:1},"濟":{R:33,L:67,M:1},"虔":{R:33,L:67},"敲":{L:1},"敷":{L:1},"藥":{R:1},"斑":{L:67,R:33},"紋":{R:1},"鳩":{R:1},"斧":{L:1},"斬":{L:67,R:33},"聞":{R:78,L:22},"郎":{R:1},"舟":{R:1},"諸":{R:13,L:88},"旋":{L:1},"螺":{R:1},"旌":{L:1},"幟":{R:1},"杆":{R:75,L:25},"既":{L:1},"晷":{R:1},"漸":{R:33,L:67,M:1},"蝕":{R:1},"晨":{R:50,L:50},"旱":{L:1},"昂":{L:1},"昌":{L:1},"曉":{R:71,L:29,M:1},"燈":{R:43,L:57},"昏":{L:82,R:18},"辰":{R:1},"季":{R:1},"昨":{L:1},"敘":{R:33,L:67},"餐":{R:1},"普":{L:1},"暫":{L:1},"戾":{R:1},"烈":{R:33,L:67},"虐":{R:50,L:50},"曠":{L:1},"野":{R:20,L:80},"飛":{R:16,L:84,M:1},"份":{R:1},"朔":{R:1},"桂":{R:50,L:50,M:1},"機":{R:20,L:80,M:1},"漏":{R:1},"緣":{R:50,L:50,M:1},"誤":{R:67,L:33},"違":{R:25,L:75},"朋":{L:67,R:33,M:1},"柱":{R:70,L:30},"朱":{L:1},"杉":{L:1},"杏":{L:1},"材":{L:33,R:67},"杜":{L:1},"蘭":{R:1},"盤":{R:44,L:56},"費":{R:60,L:40},"枕":{L:67,R:33,M:1},"枯":{L:1},"槁":{R:1},"瘦":{R:67,L:33},"竭":{R:50,L:50},"枳":{L:1},"棘":{R:50,L:50},"枵":{L:1},"薄":{R:43,L:57,M:1},"架":{L:67,R:33},"枷":{L:1},"柁":{L:1},"梁":{R:75,L:25},"柏":{L:1},"染":{L:67,R:33},"污":{R:67,L:33},"柔":{L:83,R:17},"媚":{R:1},"究":{R:75,L:25},"柳":{L:1},"栽":{L:1},"桅":{L:1},"桌":{L:1},"桑":{L:1},"款":{R:25,L:75},"梯":{L:50,R:50},"梳":{L:1},"棍":{L:67,R:33},"棟":{L:1},"棲":{L:1},"棺":{L:1},"椅":{L:1},"椴":{L:1},"椽":{L:1},"楊":{L:50,R:50},"楚":{L:20,R:80,M:1},"榆":{L:1},"榜":{L:1},"幸":{R:67,L:33},"爵":{R:50,L:50},"榴":{L:33,R:67},"槽":{L:33,R:67},"閣":{R:1},"標":{L:1},"竿":{R:1},"樞":{L:50,R:50},"紐":{R:1},"模":{L:50,R:50},"梢":{R:1},"秧":{R:50,L:50},"膠":{R:1},"蔭":{R:50,L:50},"橄":{L:1},"欖":{R:1,M:1},"橛":{L:1},"檻":{R:1},"軸":{R:1},"橡":{L:1},"檀":{L:1},"檢":{L:1},"櫃":{L:67,R:33},"欄":{L:1},"序":{R:1},"欣":{L:67,R:33},"頌":{R:50,L:50},"確":{R:29,L:71},"履":{R:1},"踏":{R:67,L:33},"歪":{L:50,R:50},"歷":{L:86,R:14,M:1},"附":{R:17,L:83,M:1},"屍":{R:1},"狗":{R:50,L:50},"殉":{L:1},"殯":{L:50,R:50},"殷":{L:1},"戮":{R:1},"謗":{R:1},"毆":{L:1},"舅":{R:1},"逢":{R:1},"蛇":{R:50,L:50},"喻":{R:1},"賽":{R:67,L:33,M:1},"較":{R:40,L:60},"織":{R:33,L:67},"毯":{L:50,R:50},"沖":{R:29,L:71},"晶":{R:1},"桶":{R:1},"潭":{R:1},"澆":{R:50,L:50},"煮":{R:25,L:75},"珠":{R:60,L:40},"罐":{R:50,L:50},"臌":{R:1},"閘":{R:1},"永":{L:91,R:9},"汁":{L:50,R:50},"禱":{R:80,L:20},"穢":{R:33,L:67},"汪":{L:33,R:67,M:1},"汲":{L:1},"決":{L:1},"沉":{L:82,R:18},"吟":{R:1},"淪":{R:1},"沐":{L:1},"浴":{R:67,L:33},"迦":{R:50,L:50,M:1},"沛":{L:1},"漆":{R:50,L:50},"沿":{L:1},"則":{R:1},"碼":{R:50,L:50},"泛":{L:1},"溢":{R:1},"濫":{R:33,L:67},"泡":{L:33,R:67},"濤":{R:1},"濘":{R:1},"注":{L:1,M:1},"洋":{L:33,R:67},"滌":{R:1},"澡":{R:1},"濯":{R:1},"洪":{L:1},"潑":{R:1},"淚":{R:50,L:50},"膿":{R:1},"蕩":{R:1},"浩":{L:1},"浮":{L:60,R:40},"渣":{R:33,L:67},"灣":{R:1},"絨":{R:67,L:33},"陸":{R:50,L:50},"浸":{L:1},"消":{L:1,M:1},"耗":{R:33,L:67},"閑":{R:1},"涮":{L:1},"涼":{L:56,R:44},"淋":{L:1},"漓":{R:1},"濕":{R:50,L:50},"淒":{L:1},"淤":{L:1},"淫":{L:67,R:33},"淵":{R:50,L:50},"淺":{R:1},"混":{L:1},"沌":{R:1},"淹":{L:1},"滓":{R:1},"測":{L:75,R:25},"港":{L:1},"泳":{R:1},"渾":{L:1},"濁":{R:1},"湊":{L:1},"湖":{L:50,R:50},"溫":{L:86,R:14},"滄":{L:1},"滋":{L:1},"滔":{L:67,R:33,M:1},"沸":{R:1},"盈":{R:33,L:67},"肚":{R:40,L:60},"漁":{L:1},"漂":{L:1},"漲":{L:1},"潦":{L:1},"潰":{L:1},"澄":{L:1},"灌":{R:50,L:50},"澎":{L:1},"湃":{R:1},"濠":{L:1},"瀑":{L:1},"瀝":{L:1},"青":{R:27,L:73},"炭":{R:75,L:25},"焚":{R:67,L:33},"焰":{R:1},"燒":{R:20,L:80},"爐":{R:57,L:43},"灰":{L:67,R:33},"殃":{R:1},"炎":{L:67,R:33},"盼":{R:33,L:67},"輔":{R:33,L:67},"烏":{L:1},"鴉":{R:1},"龜":{R:1},"烤":{L:75,R:25},"焉":{L:1},"奈":{R:1,M:1},"暇":{R:1},"涉":{R:1},"瑕":{R:50,L:50},"疵":{R:1},"辜":{R:33,L:67},"遮":{R:29,L:71},"霧":{R:67,L:33},"煤":{L:1},"瑣":{R:1},"絮":{R:1},"煽":{L:1},"熄":{L:1},"熔":{L:1},"悉":{R:1},"熬":{L:1},"湯":{R:1},"症":{R:1},"熾":{L:1},"燃":{L:1},"盞":{R:1},"籠":{R:67,L:33},"窯":{R:50,L:50},"燕":{L:1},"燦":{L:1},"灶":{R:1},"爬":{L:1},"競":{R:1},"訟":{R:67,L:33},"爽":{L:1},"爾":{L:50,R:50},"垣":{R:1},"壁":{R:1},"犢":{R:1},"牲":{L:67,R:33},"牽":{L:1},"犧":{L:1},"詞":{R:1},"狂":{L:62,R:38},"瀾":{R:1},"狐":{L:1,M:1},"狸":{R:1,M:1},"狠":{L:1},"狡":{L:1},"猾":{R:1},"狹":{L:1},"隘":{R:50,L:50},"狼":{L:50,R:50},"猖":{L:1},"猜":{L:1},"猶":{L:1},"猿":{L:1},"猴":{R:1},"獅":{L:1,M:1},"賞":{R:50,L:50},"玄":{L:1},"璽":{R:1},"統":{R:29,L:71},"玫":{L:1},"瑰":{R:1,M:1},"玷":{L:1},"玻":{L:1},"璃":{R:1},"珊":{L:1},"瑚":{R:1},"珍":{L:1},"饈":{R:1,M:1},"串":{R:1},"琥":{L:1},"珀":{R:1},"瑟":{R:1},"琵":{L:1},"琶":{R:1},"瑙":{R:1},"璧":{L:1},"瓔":{L:1},"珞":{R:1},"瓜":{L:33,R:67},"瓦":{L:1},"甜":{R:25,L:75},"蔗":{R:1},"霖":{R:1},"疏":{R:50,L:50},"育":{R:67,L:33},"紙":{R:1},"甩":{L:1},"鼠":{R:1},"申":{L:1},"疆":{L:1},"痔":{L:1},"瘡":{R:1},"痢":{L:1},"瘀":{L:1},"癲":{R:33,L:67},"瘟":{L:50,R:50},"疫":{R:1},"瘠":{L:1},"瘤":{L:1},"瘧":{L:1},"瘸":{L:1},"癆":{L:1},"癱":{L:1},"瘓":{R:1},"癇":{R:1},"旺":{R:1},"綠":{R:50,L:50},"脹":{R:1},"臭":{R:40,L:60},"誓":{R:80,L:20},"酵":{R:1},"酸":{R:50,L:50},"電":{R:75,L:25},"顫":{R:1},"叟":{R:1},"鶴":{R:50,L:50},"皇":{L:1},"皎":{L:1},"膚":{R:1},"皺":{L:1},"盔":{L:50,R:50,M:1},"賊":{R:50,L:50},"睜":{R:25,L:75},"睹":{R:1,M:1},"符":{R:50,L:50},"繼":{R:25,L:75},"隔":{R:38,L:63},"盾":{L:1},"眨":{L:1},"瞎":{L:1},"瞞":{L:67,R:33},"瞪":{L:1},"瞭":{L:1},"瞳":{L:1},"瞻":{L:1},"矮":{L:75,R:25},"矬":{R:1},"版":{R:1},"砍":{L:75,R:25},"砸":{L:1},"硫":{L:1},"磺":{R:1},"碧":{L:1},"磐":{L:1},"磚":{L:1},"磯":{L:1},"祀":{L:50,R:50},"祈":{L:1},"祝":{L:1},"壇":{R:1},"祉":{R:1},"禽":{L:67,R:33,M:1},"鳥":{R:63,L:38},"稭":{R:1},"稼":{R:50,L:50},"私":{L:88,R:13},"秉":{L:1},"秋":{L:1},"科":{L:1},"訣":{R:1},"租":{L:1},"秦":{L:1},"稀":{L:1},"途":{R:1},"稍":{L:67,R:33},"稗":{L:1},"稠":{L:1},"穡":{R:1},"攢":{R:1},"蓄":{R:50,L:50},"蒼":{R:40,L:60},"突":{L:1},"窗":{L:75,R:25},"櫺":{R:1},"窿":{R:1},"笨":{L:67,R:33},"筏":{L:1},"策":{L:1},"轄":{R:50,L:50},"箱":{L:25,R:75},"箴":{L:1},"篤":{L:1},"篩":{L:67,R:33},"篷":{L:1},"簸":{L:1},"箕":{R:1},"簽":{L:1},"籌":{L:1},"籬":{L:1},"笆":{R:1},"籮":{L:1},"粗":{L:1},"粘":{L:1},"糊":{L:33,R:67},"廠":{R:1},"糟":{L:1},"踐":{R:67,L:33},"蹋":{R:1},"糢":{L:1},"餉":{R:1},"旦":{R:1,M:1},"翰":{R:50,L:50},"豆":{R:33,L:67},"諫":{R:1},"貢":{R:33,L:67},"純":{L:1},"菜":{R:67,L:33},"紡":{L:1},"紫":{L:1},"贅":{R:1},"絆":{L:75,R:25},"予":{R:1},"驛":{R:1},"絲":{L:1},"綢":{R:50,L:50},"綽":{L:50,R:50},"綿":{L:67,R:33},"蠻":{R:50,L:50},"貼":{R:25,L:75},"緘":{L:1},"默":{R:30,L:70,M:1},"繩":{R:50,L:50},"編":{L:1},"緩":{L:50,R:50},"緯":{L:1},"縫":{L:50,R:50},"縮":{L:67,R:33},"綱":{R:1},"繁":{L:1},"茂":{R:33,L:67},"繡":{L:67,R:33},"纏":{L:1},"縛":{R:1},"纜":{L:1},"缸":{L:1},"罕":{L:1},"罩":{L:1},"魁":{R:1},"騎":{R:17,L:83},"羈":{L:1},"羔":{R:33,L:67,M:1},"麗":{R:1,M:1},"羚":{L:1},"羨":{L:1},"羽":{L:1},"膀":{R:50,L:50},"翎":{L:1},"翡":{L:1},"翠":{R:1},"耕":{L:1},"耙":{L:50,R:50},"聾":{R:33,L:67},"耶":{L:1},"穌":{R:1,M:1},"魯":{R:1},"耽":{L:1},"擱":{R:1},"聯":{L:80,R:20},"絡":{R:1},"聳":{L:50,R:50},"肋":{L:1},"臍":{R:50,L:50},"肝":{L:1},"肥":{L:93,R:7},"皂":{R:1},"胖":{R:1},"肺":{L:1},"腑":{R:1},"胃":{L:50,R:50},"胞":{R:50,L:50},"胳":{L:1},"贏":{R:50,L:50},"脂":{L:1},"脊":{L:1},"脾":{L:1},"腓":{L:1},"腥":{L:1},"踢":{R:1},"膳":{L:1},"怯":{R:1},"恃":{R:1},"薦":{R:1},"逞":{R:33,L:67},"臬":{L:1},"舀":{L:1},"鰨":{R:1},"舞":{L:67,R:33},"蹈":{R:1,M:1},"航":{L:1},"艱":{L:1},"艷":{L:1},"艾":{L:1},"芟":{L:1},"芥":{L:1},"芫":{L:1},"荽":{R:1},"畦":{R:1},"苞":{R:1},"芸":{L:1},"芹":{L:1},"苗":{L:1},"裔":{R:1},"苟":{L:1},"雄":{R:1},"茅":{L:1},"茴":{L:1,M:1},"茵":{L:1},"蔯":{R:1},"荊":{L:1},"渺":{R:1},"漠":{R:1},"荷":{L:50,R:50},"莫":{L:1},"菖":{L:1},"蒲":{R:50,L:50},"蔬":{R:50,L:50},"萎":{L:1},"葉":{L:1,M:1},"葡":{L:1,M:1},"萄":{R:1,M:1},"葦":{L:75,R:25},"塘":{R:1},"葫":{L:1},"蘆":{R:33,L:67},"蒺":{L:1},"藜":{R:1},"蠅":{R:1},"蓬":{L:1},"蓮":{L:1},"蔓":{L:1},"藉":{L:1},"匿":{R:1},"躲":{R:20,L:80},"藐":{L:1},"藩":{L:1},"薈":{R:1},"蘋":{L:1},"蘸":{L:1},"虎":{L:1},"咷":{R:1},"筒":{R:1},"虱":{L:1},"虼":{L:1},"蚤":{R:1},"蚱":{L:50,R:50},"蜢":{R:1},"蛛":{L:50,R:50,M:1},"蜂":{L:80,R:20},"蜜":{R:33,L:67,M:1},"蜘":{L:1},"蝙":{L:1},"蝠":{R:1},"蝮":{L:1},"蝸":{L:1},"蝻":{L:1},"融":{L:1},"螞":{L:1},"蟥":{R:1},"蟻":{R:1},"蠍":{L:1},"蠟":{L:1},"蠶":{L:1},"脈":{R:1},"李":{R:1},"蹤":{R:33,L:67},"衙":{L:1},"衡":{L:1},"裳":{R:1},"襟":{R:1},"褂":{R:50,L:50},"袖":{L:50,R:50},"褥":{L:1},"褲":{L:1},"褻":{L:1},"瀆":{R:1},"弗":{R:1,M:1},"晴":{R:1},"矩":{R:1},"覓":{L:1},"戚":{R:1},"釋":{R:67,L:33},"觸":{L:1},"討":{L:86,R:14},"誨":{R:1},"詢":{L:1},"詫":{L:1},"詭":{L:1},"隱":{R:9,L:91},"詳":{L:1},"誣":{L:1},"誥":{L:1},"勻":{R:1},"羹":{R:1},"諂":{L:1},"諒":{L:50,R:50},"謄":{L:1},"謙":{L:83,R:17},"遜":{R:1},"謠":{L:1},"謹":{L:67,R:33},"慎":{R:1},"譏":{L:1},"誚":{R:1},"系":{R:1},"警":{L:1},"遷":{R:20,L:80},"讒":{L:1},"豁":{L:1},"莢":{R:1},"豈":{L:1},"豹":{L:1},"豺":{L:1},"貞":{L:1},"販":{L:1},"貪":{L:1},"婪":{R:1},"貽":{L:1},"貿":{L:1},"賂":{R:1},"賓":{L:1},"賠":{L:1},"賢":{L:1},"賭":{L:1},"贈":{L:1},"赤":{L:1},"赦":{L:1},"赫":{L:1},"赴":{L:1},"趁":{L:1},"超":{L:1},"逐":{R:67,L:33},"鬼":{R:67,L:33},"趨":{L:1},"跨":{L:1},"徑":{R:1},"躍":{R:50,L:50},"踴":{L:1},"蹦":{L:1},"蹲":{L:1},"避":{R:33,L:67},"躺":{L:1},"軌":{L:1},"佐":{R:1},"蔑":{R:1},"輜":{L:1},"煌":{R:1},"輞":{R:1},"輾":{L:1},"轟":{L:50,R:50},"轡":{L:1},"辛":{L:1},"駁":{R:25,L:75},"迅":{L:1},"悼":{R:1},"遁":{R:1},"逝":{L:1},"逾":{L:67,R:33},"遙":{L:1},"遞":{L:1},"遭":{L:1},"鈍":{R:1},"遼":{L:1},"諱":{R:1},"邀":{L:1},"陋":{R:1},"鄭":{L:1},"酉":{L:1},"酌":{L:1},"窖":{R:1},"醡":{R:1},"酩":{L:1},"酊":{R:1,M:1},"酬":{L:1},"醇":{L:1},"漢":{R:50,L:50},"驢":{R:67,L:33},"釘":{L:1},"釣":{L:1},"鈕":{L:1},"扣":{R:1},"鈴":{L:1},"鐺":{R:1},"鉗":{L:1},"鉤":{L:67,R:33},"銅":{L:1},"鈸":{R:1},"銘":{L:1},"刃":{R:1},"鋤":{L:1},"鋼":{L:1},"錐":{L:1},"錚":{L:50,R:50},"錠":{L:1},"錦":{L:1},"鏈":{R:50,L:50},"鎧":{L:1},"鏟":{L:1},"鏡":{L:1},"鐫":{L:1},"鐮":{L:50,R:50},"鐐":{R:1},"鑄":{L:1},"鑰":{L:1},"匙":{R:1},"鑲":{L:1},"嵌":{R:1},"鑷":{L:1},"鑿":{L:1},"扇":{R:1},"框":{R:1},"楣":{R:1},"爍":{R:1},"閨":{L:1},"閹":{L:1},"闖":{L:1},"阿":{L:93,R:7,M:1},"爸":{R:1},"陪":{L:1},"翳":{R:1},"魂":{R:67,L:33},"陶":{L:1},"隆":{L:50,R:50},"雕":{L:1},"雖":{L:1},"貂":{R:1},"零":{L:1,M:1},"霉":{L:1},"霸":{L:1},"霹":{L:1},"蛙":{R:1},"靶":{L:1},"鞍":{L:1},"鞭":{L:1},"頃":{L:1},"梗":{R:1},"頒":{L:1},"顏":{L:1},"顛":{L:1},"飄":{L:1},"翔":{R:1},"飫":{R:1},"餘":{L:67,M:1,R:33},"館":{L:1},"級":{R:1},"馨":{L:1},"蹄":{R:1},"馱":{L:1},"馳":{L:1},"馴":{L:1},"駐":{L:1},"駒":{L:1,M:1},"駕":{L:1},"馭":{R:1},"駝":{L:67,R:33,M:1},"駱":{L:1},"駿":{L:1},"騷":{L:1},"騾":{L:1},"驕":{L:1},"訝":{R:1},"駭":{R:1},"骼":{R:1},"髓":{R:1},"骸":{L:1},"髑":{L:1},"髏":{R:1,M:1},"態":{R:1},"鬢":{L:1},"鯨":{L:1},"鱗":{L:1},"爪":{R:1},"鴕":{L:1},"鴿":{L:1},"鵜":{L:1},"鶘":{R:1},"鵪":{L:1},"鶉":{R:1},"鷂":{L:1},"鷓":{L:1},"鴣":{R:1},"鷙":{L:1},"鷺":{L:1},"鷥":{R:1},"鹼":{L:1},"鹵":{R:1},"麋":{L:1},"紗":{R:1},"黎":{L:1},"黝":{L:1},"鼫":{L:1},"鼬":{L:1},"鼴":{L:1},"齋":{L:1},"旬":{M:1},"劊":{L:1},"呂":{L:1},"彌":{L:1},"癬":{R:1},"蛾":{L:1},"貓":{L:1},"踝":{L:1},"錫":{L:1},"鳳":{L:1},"仙":{M:1},"浦":{M:1},"循":{L:1},"胡":{L:1}},
    /// End of Analysis
        /// Created in the Forge on Wed, 23 Oct 2013 18:08:48 GMT.
        /// Plot Data
        plot_data = [{x:0,y:8187},{x:70,y:1082},{x:144,y:734},{x:323,y:428},{x:951,y:196},{x:2944,y:73},{x:8140,y:23},{x:50802,y:1}],
        /// End of Plot Data
        segment;
    
    /// In the eval context, "this" is undefined, so it needs to get the global object manually.
    /// Because this file is included immediately via <script> tags, it is not eval'ed.
    ///NOTE: Object.isFrozen() is needed for eval'ed code because the "this" object is the one from the evaler() function.
    if (typeof that === "undefined" || Object.isFrozen(that)) {
        /// Since only the browser might load the code via eval(), use the "window" object.
        that = window;
    }
    
    /// Has the BF object already been created?
    ///NOTE: "that" is "this", which is "window" in browsers and a global object in Node.js.
    ///NOTE: This also allows this code to be accessed via Node.js' require() function.
    if (!that.BF) {
        that.BF = {langs: {}};
    } else if (!that.BF.langs) {
        that.BF.langs = {};
    }
    
    /// Return the language variables and functions.
    that.BF.langs.zh_t = {
        /// Indicate that the code has been downloaded and parsed.
        loaded: true,
        
        /// Indicate the language name so it can be distinguished later.
        full_name:    "繁體中文 (CKJV)",
        short_name:   "繁體",
        abbreviation: "CKJV",
        id:           "zh_t",
        
        /// This is used to match the accept-language header to indicate which languages this represents.
        /// See RFC 3282: https://tools.ietf.org/html/rfc3282
        /// This matches "zh" and "zh-*" except for "zh-cn" and "zh-chs".
        match_lang: /^zh(?:-c(?!n|hs))?$/i,
        
        /// Indicate that the first verse should not get special CSS.
        first_verse_normal: true,
        
        /// Use books_long_main names to create references when searching.
        use_main_title: true,
        
        /// Has this language been linked to the originals?
        linked_to_orig: false,
        
        /// Set the language's symbols.
        space: "",
        chap_separator: "：",
        ndash: "\u2014",
        
        /// Information about this particular Bible translation needed by the server.
        ///NOTE: paragraph_limit can be calculated in the Forge via find_longest_paragraph.js.
        /// The longest paragraph length plus one
        ///NOTE: One is added because it needs to find the paragraph break, which would be demarcated on the next verse when preforming an additional lookup.
        paragraph_limit:        77,
        /// The number of verses to request for a normal verse lookup (It should more than fill up the screen and not need to request more.)
        minimum_desired_verses: 77,
        
        /// Information about different sections of the Bible
        divisions: {
            ///NOTE: Currently, only the division between the Old and New Testaments is needed.
            /// Created in the Forge on Wed, 23 Oct 2013 18:30:55 GMT.
            /// New Testament Division
            nt: 393018,
            /// End of New Testament Division
        },
        
        ///NOTE: A temporary fix to let server-side code get access to these variables (since it cannot emulate all the parts to make load_dependencies() to work.
        analysis:  analysis,
        plot_data: plot_data,
        
        /**
         * Load additional data from the server.
         *
         * @param callback (function) The function to call asynchronously after all of the data is loaded.
         * @note  This is called by BF.change_language() in secondary.js.
         */
        load_dependencies: function (callback)
        {
            var context = {},
                /// Since we have multiple asynchronously tasks, let's use a cue.
                ///NOTE: BF.create_transition_cue() is created by secondary.js.  Currently, secondary.js is always loaded before other languages have a chance to be loaded.
                ///TODO: Add support for create_transition_cue() on the server.
                cue = that.BF.create_transition_cue(function completed()
                {
                    ///NOTE: context.segment() is added by zh_segment.js
                    if (context.segment) {
                        ///NOTE: The true argument sets the segmentor to Traditional Chinese.
                        segment = function (terms)
                        {
                            return context.segment(analysis, dict, plot_data, terms);
                        };
                    }
                    if (callback) {
                        callback();
                    }
                }),
                dict;
            
            /// Since the segmentation code is the same for both Simplified and Traditional Chinese (and since the dictionaries have to be downloaded any way),
            /// it makes sense to put the segmentation code in a separate, sharable file.
            cue.add({id: 0});
            ///TODO: Add support for include() on the server.
            that.BF.include("/js/misc/zh_segment.js?42eaeb94d58cad75800c56c15f6e1416", context, function onload()
            {
                cue.async_remove(0);
            });
            /// Since the dictionary is a relatively large string, it makes sense to store it in another file and download it separately (it will still be cached).
            cue.add({id: 1});
            ///TODO: Add support for Create_easy_ajax() on the server.
            (new that.BF.Create_easy_ajax()).query("GET", "/js/misc/zh_t_dict.txt?cb7aee57e5bd184a652c342f676b3b81", "", function (res)
            {
                dict = res;
                cue.async_remove(1);
            });
        },
        
        /// Book names
        books_long_main:      ["", "創世記", "出埃及記", "利未記", "民數記", "申命記", "約書亞記", "士師記", "路得記", "撒母耳記上", "撒母耳記下", "列王紀上", "列王紀下", "歷代誌上", "歷代誌下", "以斯拉記", "尼希米記" , "以斯帖記", "約伯記", "詩篇", "箴言", "傳道書", "雅歌", "以賽亞書", "耶利米書", "耶利米哀歌", "以西結書", "但以理書", "何西阿書", "約珥書", "阿摩司書", "俄巴底亞書", "約拿書", "彌迦書", "那鴻書", "哈巴谷書", "西番雅書", "哈該書", "撒迦利亞書", "瑪拉基書", "馬太福音", "馬可福音", "路加福音", "約翰福音", "使徒行傳", "羅馬書", "哥林多前書", "哥林多後書", "加拉太書", "以弗所書", "腓立比書", "歌羅西書", "帖撒羅尼迦前書", "帖撒羅尼迦後書", "提摩太前書", "提摩太后書", "提多書", "腓利門書", "希伯來書", "雅各書", "彼得前書", "彼得後書", "約翰一書" , "約翰二書", "約翰三書", "猶大書", "啟示錄"],
        books_long_posttitle: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""],
        books_long_pretitle:  ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""],
        books_short:          ["", "創", "出", "利", "民", "申", "書", "士", "得", "撒上", "撒下", "王上", "王下", "代上", "代下", "拉", "尼", "斯", "伯", "詩", "箴", "傳", "歌", "賽", "耶", "哀", "結", "但", "何", "珥", "摩", "俄", "拿", "彌", "鴻", "哈", "番", "該", "亞", "瑪", "太", "可", "路", "約", "徒", "羅", "林前", "林後", "加", "弗", "腓", "西", "帖前", "帖後", "提前", "提後", "多", "門", "來", "雅", "彼前", "彼後", "約一", "約二", "約三", "猶", "啟"],
        
        /// The Hebrew alphabet (used for Psalm 119)
        hebrew_alphabet: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""],
        
        /// The number of chapters in each book of the Bible.
        ///NOTE: Genesis is index 1 (not 0).
        chapter_count: [0, 50, 40, 27, 36, 34, 24, 21, 4, 31, 24, 22, 25, 29, 36, 10, 13, 10, 42, 150, 31, 12, 8, 66, 52, 5, 48, 12, 14, 3, 9, 1, 4, 7, 3, 3, 3, 2, 14, 4, 28, 16, 24, 21, 28, 16, 16, 13, 6, 6, 4, 4, 5, 3, 6, 4, 3, 1, 13, 5, 5, 3, 5, 1, 1, 1, 22],
        
        ///TODO: Determine if texts should be categorized.
        /// Miscellaneous Text
        about:             "關於BibleForge",                                        /// Context menu item
        about_version:     "關於{v}",                                               /// Context menu item (e.g., "About KJV")
        all_lang:          "所有的語言",                                             /// The heading for language links in the footer of the non-JS version.
        app_name:          "BibleForge",                                           /// The name of the application
        biblical:          "Biblical",                                             /// The short name for the Biblical reconstructed pronunciation displayed on the menu
        biblical_pronun:   "Biblical Reconstructed Pronunciation",                 /// The long name for the Biblical reconstructed pronunciation displayed in a tooltip
        biblical_ipa:      "Biblical IPA",                                         /// The short name for the Biblical reconstructed IPA pronunciation displayed on the menu
        biblical_ipa_long: "Biblical Reconstructed IPA",                           /// The long name for the Biblical reconstructed IPA pronunciation displayed in a tooltip
        blog:              "博客",                                                  /// Context menu item
        cancel:            "取消",                                                  /// Cancel button text
        chapter:           "第{num}章",                                             /// Chapter headings
        chapter_psalm:     "第{num}首",                                             /// The title of chapters in the book of Psalms
        configure:         "形態",                                                  /// Context menu item
        contact:           "聯繫",                                                  /// Context menu item
        credits:           "<p>《中文英皇欽定本》的經文基於《和合本》，並與使用了《Textus Receptus》所翻譯出來的英文聖經《英皇欽定本（King James Version）》作仔細比較然後作出修訂。</p><p>更多信息請訪問<a href=\"http://ckjv.asia/\" target=_blank>ckjv.asia</a>。</p><p>《中文英皇欽定本》由ckjv.asia製作，以<a href=\"http://creativecommons.org/licenses/by-sa/3.0/deed.zh_TW\" target=_blank>創用CC姓名標示-相同方式分享3.0 Unported授權條款（CC BY-SA 3.0）</a>釋出。</p>",
        detailed_def:      "Detailed Definition",                                  /// Longer, more detailed definitions caption (in larger callout)
        done:              "Done",                                                 /// The button that closes panels
        err_unknown:       "An error occurred. Please try again.",                 /// A query returned an error for an unspecified reason.
        form_email:        "電子郵件：",                                             /// On the contact panel, indicating Bibleforge's email address
        form_error:        "對不起，發生了錯誤。請再試一次。",                           /// An error message stating that the message was not sent properly and asking the user to try again
        form_message:      "你好……",                                                /// The placeholder for the <textarea> where the user can type a message
        form_your_email:   "電子郵件（可選）",                                        /// Input box placeholder indicating the user's email address (as optional)
        form_your_name:    "名字（可選）",                                           /// Input box placeholder indicating the user's name (as optional)
        found_plural:      "{num} verses found for <b>{q}</b>",                    /// On the info bar when searching (multiple results)
        found_singular:    "{num} verse found for <b>{q}</b>",                     /// On the info bar when searching (one result)
        "in":              "in",                                                   /// Used in the meta description in the non-JavaScript version to indicate the language being used (uncapitalized)
        ///NOTE: This key must be the same as the value in the settings.
        in_paragraphs:     "Paragraphs",                                           /// In the View configuration panel
        ///FIXME: Not all italic words are implied; some are questionable.
        italics_explanation: "This word is implied by context or required in order to translate properly; it was not translated directly from a word in the original languages.", /// When clicking on an italic word
        modern:            "Modern",                                               /// The short name for the modern pronunciation displayed on the menu
        modern_pronun:     "Modern Pronunciation",                                 /// The long name for the modern pronunciation displayed in a tooltip
        modern_ipa:        "Modern IPA",                                           /// The name for the modern IPA pronunciation displayed on the menu and tooltip
        more:              "More",                                                 /// The text for the "[+] More" button on callouts
        next_chap:         "下一章",                                                /// The next chapter link in the non-JavaScript version
        next_psalm:        "下一首",                                                /// The next psalm link in the non-JavaScript version
        night_mode:        "Night Mode",                                           /// In the View configuration panel
        no_results:        "Your search\u200A\u2014\u200A<b>{q}</b>\u200A\u2014\u200Adid not return any results.", /// Displayed when preforming a search that returns no results (NOTE: \u200A are hair spaces and \u2014 are em dashes.)
        previous:          "Previous",                                             /// The previous chapter link in the non-JavaScript version
        previous_chap:     "上一章",                                                /// The previous chapter link in the non-JavaScript version
        previous_psalm:    "上一首",                                                /// The previous psalm link in the non-JavaScript version
        psalm:             "詩",                                                   /// How to reference Psalms in a reference
        query_explanation: "Keyword or Reference: \"God so loved\" or Romans 3:23",/// In a blank query input box before a search has been preformed
        query_button_title:"Click here (or press Enter)",                          /// The text displayed when hovering over the magnifying glass (query button)
        query_button_alt:  "Go",                                                   /// The text to display for the magnifying glass (query button) if images are disabled
        ///NOTE: This key must be the same as the value in the settings.
        red_letters:       "Red Letters",                                          /// In the View configuration panel
        results_for:       "Results for",                                          /// Used in the meta description of searches in the non-JavaScript version to indicate the results for the query.
        send:              "發送",                                                  /// Send a message button text
        subscription:      "subscription",                                         /// Used instead of 255 for subscripts to Paul's epistles (uncapitalized)
        title:             "title",                                                /// Used instead of 0 for Psalm title verse references (uncapitalized)
        translit:          "Transliteration",                                      /// The short name for the SBL transliteration display on the menu
        translit_long:     "Society of Biblical Languages Transliteration",        /// The long name for the SBL transliteration display on a tooltip
        unsupported:       "對不起，您使用的瀏覽器不被支持。請更新您的瀏覽器或者安裝最新版本的<a href=\"https://www.mozilla.org/en-US/firefox/all/\" target=_blank>Firefox</a>或<a href=\"https://www.google.com/intl/zh-TW/chrome/browser/\" target=_blank>Chrome</a>。也可能必須啟用JavaScript。",
        view:              "View",                                                 /// The title of a configuration panel
        ///TODO: Determine if the app_name should be dynamically appended to the string below or if it should be done in the build system
        wrench_title:      "Customize and Configure BibleForge",                   /// The text displayed when hovering over the wrench menu
        
        /// Grammatical Variables
        /// Grammatical search format:  WORD grammar_marker ATTRIBUTE_1 grammar_separator ATTRIBUTE_2 grammar_separator ... ATTRIBUTE_N
        /// Grammatical search example: love AS VERB, THIRD_PERSON
        /// The keyword that indicates a grammatical search.
        ///NOTE: Created in the Forge via grammar_constants_parser.php on 05-24-2012 from Grammar Constants.txt.
        grammar_keywords:   {IMPLIED: "[1,1]", DIVINE: "[2,1]", RED: "[3,1]", NOUN: "[4,1]", VERB: "[4,2]", ADJECTIVE: "[4,3]", ADVERB: "[4,4]", PRONOUN: "[4,5]", DEFINITE_ARTICLE: "[4,6]", CONJUNCTION: "[4,7]", CONDITIONAL: "[4,8]", PARTICLE: "[4,9]", PREPOSITION: "[4,10]", INJECTIVE: "[4,11]", HEBREW: "[4,12]", ARAMAIC: "[4,13]", SINGULAR: "[5,1]", PLURAL: "[5,2]", FIRST_PERSON: "[6,1]", SECOND_PERSON: "[6,2]", THIRD_PERSON: "[6,3]", PRESENT: "[7,1]", IMPERFECT: "[7,2]", FUTURE: "[7,3]", AORIST: "[7,4]", PERFECT: "[7,5]", PLUPERFECT: "[7,6]", NO_TENSE_STATED: "[7,99]", ACTIVE: "[8,1]", MIDDLE: "[8,2]", PASSIVE: "[8,3]", MIDDLE_DEPONENT: "[8,4]", PASSIVE_DEPONENT: "[8,5]", IMPERSONAL_ACTIVE: "[8,6]", AMBIGUOUS_MIDDLE_PASSIVE: "[8,77]", AMBIGUOUS_MIDDLE_PASSIVE_DEPONENT: "[8,88]", NO_VOICE_STATED: "[8,99]", INDICATIVE: "[9,1]", SUBJUNCTIVE: "[9,2]", IMPERATIVE: "[9,3]", INFINITIVE: "[9,4]", OPTATIVE: "[9,5]", PARTICIPLE: "[9,6]", IMPERATIVE_SENSE_PARTICIPLE: "[9,7]", MASCULINE: "[10,1]", FEMININE: "[10,2]", NEUTER: "[10,3]", NOMINATIVE: "[11,1]", GENITIVE: "[11,2]", ACCUSATIVE: "[11,3]", DATIVE: "[11,4]", VOCATIVE: "[11,5]", PERSONAL_PRONOUN: "[12,1]", RELATIVE_PRONOUN: "[12,2]", RECIPROCAL_PRONOUN: "[12,3]", DEMONSTRATIVE_PRONOUN: "[12,4]", CORRELATIVE_PRONOUN: "[12,5]", INTERROGATIVE_PRONOUN: "[12,6]", INDEFINITE_PRONOUN: "[12,7]", REFLEXIVE_PRONOUN: "[12,8]", POSESSIVE_PRONOUN: "[12,9]", AMBIGUOUS_CORRELATIVE_INTERROGATIVE_PRONOUN: "[12,10]", COMPARATIVE: "[13,1]", SUPERLATIVE: "[13,2]", INDECLINABLE: "[14,1]", NUMERICAL: "[15,1]", NORMAL_NOUN: "[16,1]", PROPER_NOUN: "[16,2]", LETTER: "[16,3]", OTHER: "[16,4]", ABBREVIATED: "[17,1]", CONTRACTED: "[17,2]", APOCOPATED: "[17,3]", IRREGULAR: "[17,4]", ATTIC: "[18,1]", AEOLIC: "[18,2]", TRANSITIVE: "[19,1]", FIRST_FORM: "[20,1]", SECOND_FORM: "[20,2]", INTERROGATIVE: "[21,1]", NEGATIVE: "[21,2]", PARTICLE_ATTACHED: "[21,3]", MIDDLE_SIGNIFICANCE: "[21,4]"},
        grammar_categories: ["", "implied", "divine", "red", "part_of_speech", "number", "person", "tense", "voice", "mood", "gender", "case_5", "pronoun_type", "degree", "declinability", "numerical", "noun_type", "type", "dialect", "transitivity", "form", "miscellaneous"],
        grammar_marker:     " AS ",
        grammar_marker_len: 4,   /// The length of grammar_marker.
        grammar_separator:  ",", /// The punctuation that separates two attributes.
        
        /// ****************************************
        /// * Start of Language Specific Functions *
        /// ****************************************
        
        prepare_highlighter: (function ()
        {
            /**
             * Prepare the search terms for the highlighter.
             *
             * Removes punctuation, words which should not be found in the search results, duplicate words, and converts all words to lower case
             * so that the highlighter can parse the words properly.
             *
             * @example filter_terms_for_highlighter('this one, -that one -"none of these" -"or these ones"~1 "but, these?"'); /// Returns ["this", "one", "but", "these"].
             * @param   search_terms (string) The terms to be filtered.
             * @return  An array of filtered words.
             * @note    Called by prepare_highlighter().
             * @todo    Determine if this should be moved out of the language specific file (and maybe just use some language specific variables).
             */
            function filter_terms_for_highlighter(search_terms)
            {
                var arr_len,
                    final_search_arr = [],
                    i,
                    initial_search_arr,
                    j,
                    new_arr_len = 0;
                
                /// Split up all Chinese characters.
                ///NOTE: This is because Chinese uses single ngram searching.
                ///NOTE: This uses a positive lookahead because so that it will match more than two characters in a row.
                ///      Using a lookahead, only the first character matches, so "上帝的" first matches "上", then "帝", and finally "的" to make "上 帝 的".
                ///      Without a lookahead, it would match two characters at a time, so it would match "上帝", but it would not match "的" by itself, so it would create "上 帝的".
                search_terms = search_terms.replace(/([\u4e00-\u4e35\u4e37-\u9fff\u3400-\u4dff])(?=[\u4e00-\u4e35\u4e37-\u9fff\u3400-\u4dff])/g, "$1 ");
                
                /// Remove punctuation and break up the query string into individual parts to filter out duplicates.
                /// E.g., 'in "and the earths "earths | in | earth. | "in the beginning God"' =>
                ///       ["in","\"and the earths \"","earths","in","earth","\"in the beginning god\""]
                ///NOTE: (?:^|\s)- makes sure not to filter out hyphenated words by ensuring that a hyphen must occur at the beginning or before a space to be counted as a NOT operator.
                ///NOTE: (?:"[^"]*"?|[^\s]*) matches a phrase starting with a double quote (") or a single word.
                ///NOTE: [~\/]\d* removes characters used for Sphinx query syntax.  I.e., proximity searches ("this that"~10) and quorum matching ("at least three of these"/3).
                ///NOTE: -\B removes trailing hyphens.  (This might be unnecessary.)
                ///NOTE: '(?!s\b) removes apostrophes that are not followed by an "s" and only an "s."
                ///NOTE: "[^"]+"?|[^"\s]+ is used to split the string into groups of individual words and quoted phrases.
                ///NOTE: Unterminated double quotes are treated as a phrase that ends at the end of the query, so '"unterminated quote' is treated as '"unterminated quote"'.
                initial_search_arr = search_terms.replace(/(?:(?:^|\s)-(?:"[^"]*"?|[^\s]*)|[~\/]\d*|[…，。：？！；＆｜（）［］｛｝「」『』,.:?!;&|\)\(\]\[\/\\`{}<$\^+]|-\B|'(?!s\b))/g, "").toLowerCase().match(/"[^"]+"?|[^"\s]+/g);
                
                /// Where no terms found?  If so, return an empty array.
                ///NOTE: This could happen if all of the search terms are negative (e.g., "NOT bad").
                if (!initial_search_arr) {
                    return [];
                }
                
                arr_len = initial_search_arr.length;
                                
                /// Filter out duplicates (i.e., PHP's array_unique()).
                /// E.g., ["in","\"and the earths \"","earths","in","earth","\"in the beginning god\""] =>
                ///       ["in","\"and the earths \"","earths","earth","\"in the beginning god\""]
first_loop:     for (i = 0; i < arr_len; i += 1) {
                    /// Skip empty strings.
                    
                    if (initial_search_arr[i] !== "" && initial_search_arr[i] !== "*") {
                        for (j = 0; j < new_arr_len; j += 1) {
                            if (final_search_arr[j] === initial_search_arr[i]) {
                                /// This words already exists; jump to the first loop and get the next word.
                                ///NOTE: This would be the same as "continue 2" in PHP.
                                continue first_loop;
                            }
                        }
                        final_search_arr[new_arr_len] = initial_search_arr[i];
                        new_arr_len += 1;
                    }
                }
                
                /// Loop through all of words and phrases and remove any double quotes and add to the array as individual words or arrays of words.
                /// E.g., ["in","\"and the earths \"","earths","earth","\"in the beginning god\""] =>
                ///       ["in",["and","the","earths"],"earths","earth",["in","the","beginning","god"]]
                for (i = final_search_arr.length - 1; i >= 0; i -= 1) {
                    /// Since a quotation mark might be followed or preceded by a space, make sure to remove any extra space when removing double quotes.
                    final_search_arr[i] = final_search_arr[i].replace(/\s*"\s*/g, "");
                    /// Is this a phrase (multiple words that were in double quotes)?
                    if (final_search_arr[i].indexOf(" ") !== -1) {
                        /// Add phrases as an array of individual words.
                        final_search_arr[i] = final_search_arr[i].split(" ");
                    }
                }
                
                return final_search_arr;
            }
            
            function add_regex(term)
            {
                /// Convert the asterisks to a valid regex wildcard.
                ///NOTE: Word breaks are found by looking for tag openings (<) or closings (>).
                term = term.replace(/\*/g, "[^<>]*");
                return "=([0-9]+)>[　「『（]*" + term + "[…）；：，。？！」』、丶]*<";
            }
            
            /**
             * Prepare search terms for highlighting.
             *
             * Create regex array to search through the verses that will soon be returned by the server.
             *
             * @example BF.lang.prepare_highlighter(q_obj.value);
             * @example BF.lang.prepare_highlighter("search terms");
             * @param   search_terms (string) The terms to look for.
             * @return  An array of regular expressions.
             * @note    Called by run_new_query().
             * @todo    Determine if this can be moved out of the language specific files.
             */
            return function prepare_highlighter(search_terms)
            {
                var highlight_regex = [],
                    i,
                    j,
                    search_terms_arr = filter_terms_for_highlighter(search_terms),
                    search_terms_arr_len,
                    stemmed,
                    stemmed_obj = {},
                    stemmed_tmp,
                    word_count;
                
                search_terms_arr_len = search_terms_arr.length;
                
                /// Loop through the array of words and phrases to create the regular expression.
                for (i = 0; i < search_terms_arr_len; i += 1) {
                    /// Is it a single word (it will be a string)?
                    if (typeof search_terms_arr[i] === "string") {
                        stemmed = add_regex(search_terms_arr[i]);
                        
                        word_count = 1;
                    /// If it is not a string, then it should be an array of strings.
                    } else {
                        stemmed = "";
                        word_count = search_terms_arr[i].length;
                        /// Loop through each word in the phrase to get a regular expression to highlight it and then combine it with the others.
                        for (j = word_count - 1; j >= 0; j -= 1) {
                            stemmed_tmp = add_regex(search_terms_arr[i][j]);
                            if (j > 0) {
                                /// Add a short regular expression to "glue" the regular expressions for each word together to create a regular expression for the entire phrase.
                                /// It also needs to skip over empty words (words that are just an empty HTML tag).
                                /// (?:/[^>]+>*<[^>]*)? is used to skip over HTML tags.
                                stemmed_tmp = "(?:/[^>]+>*<[^>]*)?" + stemmed_tmp;
                            }
                            /// Since we are looping backward, add it to the beginning of the string.
                            stemmed = stemmed_tmp + stemmed;
                        }
                    }
                    
                    /// Is this regular expression not a duplicate?
                    if (!stemmed_obj[stemmed]) {
                        stemmed_obj[stemmed] = true;
                        
                        highlight_regex[highlight_regex.length] = {
                            /// Create the regular expression for the phrase or word (and make it case insensitive).
                            regex: new RegExp(stemmed, "i"),
                            /// word_count is used when looping through the results of the regular expression to know how many IDs to look for.
                            word_count: word_count
                        };
                    }
                }
                
                return highlight_regex;
            };
        }()),


        /**
         * Determines the id of a verse from a reference.
         *
         * Determines if a verse is a reference and then calculates the verse id.
         * It supports various abbreviated forms as well as misspellings.
         * Only a book is required or checked for validity.
         * The verse id format is [B]BCCCVVV (e.g., Genesis 1:1 == 1001001).
         *
         * @example verse_id = determine_reference("創");               /// Returns "10001001"
         * @example verse_id = determine_reference("帖撒羅尼迦前書3：10"); /// Returns "52003010"
         * @example verse_id = determine_reference("愛");               /// Returns 0
         * @param   ref (string) The text that may or may not be a valid verse reference.
         * @return  The verse id of a reference (as a string) or the integer 0 if invalid.
         * @todo    Determine if this should return FALSE on invalid references.
         */
        determine_reference: (function ()
        {
            var books = {
                /// Simplified
                "创": 1, "出": 2, "利": 3, "民": 4, "申": 5, "书": 6, "士": 7, "得": 8, "撒上": 9, "撒下": 10, "王上": 11, "王下": 12, "代上": 13, "代下": 14, "拉": 15, "尼": 16, "斯": 17, "伯": 18, "诗": 19, "箴": 20, "传": 21, "歌": 22, "赛": 23, "耶": 24, "哀": 25, "结": 26, "但": 27, "何": 28, "珥": 29, "摩": 30, "俄": 31, "拿": 32, "弥": 33, "鸿": 34, "哈": 35, "番": 36, "该": 37, "亚": 38, "玛": 39, "太": 40, "可": 41, "路": 42, "约": 43, "徒": 44, "罗": 45, "林前": 46, "林后": 47, "加": 48, "弗": 49, "腓": 50, "西": 51, "帖前": 52, "帖后": 53, "提前": 54, "提后": 55, "多": 56, "门": 57, "来": 58, "雅": 59, "彼前": 60, "彼后": 61, "约一": 62, "约二": 63, "约三": 64, "犹": 65, "启": 66,
                "创世记": 1, "出埃及记": 2, "利未记": 3, "民数记": 4, "申命记": 5, "约书亚记": 6, "士师记": 7, "路得记": 8, "撒母耳记上": 9, "撒母耳记下": 10, "列王纪上": 11, "列王纪下": 12, "历代志上": 13, "历代志下": 14, "以斯拉记": 15, "尼希米记": 16, "以斯帖记": 17, "约伯记": 18, "诗篇": 19, "箴言": 20, "传道书": 21, "雅歌": 22, "以赛亚书": 23, "耶利米书": 24, "耶利米哀歌": 25, "以西结书": 26, "但以理书": 27, "何西阿书": 28, "约珥书": 29, "阿摩司书": 30, "俄巴底亚书": 31, "约拿书": 32, "弥迦书": 33, "那鸿书": 34, "哈巴谷书": 35, "西番雅书": 36, "哈该书": 37, "撒迦利亚书": 38, "玛拉基书": 39, "马太福音": 40, "马可福音": 41, "路加福音": 42, "约翰福音": 43, "使徒行传": 44, "罗马书": 45, "哥林多前书": 46, "哥林多后书": 47, "加拉太书": 48, "以弗所书": 49, "腓立比书": 50, "歌罗西书": 51, "帖撒罗尼迦前书": 52, "帖撒罗尼迦后书": 53, "提摩太前书": 54, "提摩太后书": 55, "提多书": 56, "腓利门书": 57, "希伯来书": 58, "雅各书": 59, "彼得前书": 60, "彼得后书": 61, "约翰一书": 62, "约翰二书": 63, "约翰三书": 64, "犹大书": 65, "启示录": 66,
                /// Traditional
                "創": 1, "書": 6, "詩": 19, "傳": 21, "賽": 23, "結": 26, "彌": 33, "鴻": 34, "該": 37, "亞": 38, "瑪": 39, "約": 43, "羅": 45, "林後": 47, "帖後": 53, "提後": 55, "門": 57, "來": 58, "彼後": 61, "約一": 62, "約二": 63, "約三": 64, "猶": 65, "啟": 66,
                "創世記": 1, "出埃及記": 2, "利未記": 3, "民數記": 4, "申命記": 5, "約書亞記": 6, "士師記": 7, "路得記": 8, "撒母耳記上": 9, "撒母耳記下": 10, "列王紀上": 11, "列王紀下": 12, "歷代誌上": 13, "歷代誌下": 14, "以斯拉記": 15, "尼希米記": 16 , "以斯帖記": 17, "約伯記": 18, "詩篇": 19, "傳道書": 21, "以賽亞書": 23, "耶利米書": 24, "以西結書": 26, "但以理書": 27, "何西阿書": 28, "約珥書": 29, "阿摩司書": 30, "俄巴底亞書": 31, "約拿書": 32, "彌迦書": 33, "那鴻書": 34, "哈巴谷書": 35, "西番雅書": 36, "哈該書": 37, "撒迦利亞書": 38, "瑪拉基書": 39, "馬太福音": 40, "馬可福音": 41, "約翰福音": 43, "使徒行傳": 44, "羅馬書": 45, "哥林多前書": 46, "哥林多後書": 47, "加拉太書": 48, "以弗所書": 49, "腓立比書": 50, "歌羅西書": 51, "帖撒羅尼迦前書": 52, "帖撒羅尼迦後書": 53, "提摩太前書": 54, "提摩太后書": 55, "提多書": 56, "腓利門書": 57, "希伯來書": 58, "雅各書": 59, "彼得前書": 60, "彼得後書": 61, "約翰一書": 62, "約翰二書": 63, "約翰三書": 64, "猶大書": 65, "啟示錄": 66,
                /// English
                genesis: 1, exodus: 2, leviticus: 3, numbers: 4, deuteronomy: 5, joshua: 6, judges: 7, ruth: 8, "1 samuel": 9, "2 samuel": 10, "1 kings": 11, "2 kings": 12, "1 chronicles": 13, "2 chronicles": 14, ezra: 15, nehemiah: 16, esther: 17, job: 18, psalms: 19, proverbs: 20, ecclesiastes: 21, "song of songs": 22, isaiah: 23, jeremiah: 24, lamentations: 25, ezekiel: 26, daniel: 27, hosea: 28, joel: 29, amos: 30, obadiah: 31, jonah: 32, micah: 33, nahum: 34, habakkuk: 35, zephaniah: 36, haggai: 37, zechariah: 38, malachi: 39, matthew: 40, mark: 41, luke: 42, john: 43, acts: 44, romans: 45, "1 corinthians": 46, "2 corinthians": 47, galatians: 48, ephesians: 49, philippians: 50, Colossians: 51, "1 thessalonians": 52, "2 thessalonians": 53, "1 timothy": 54, "2 timothy": 55, titus: 56, philemon: 57, hebrews: 58, james: 59, "1 peter": 60, "2 peter": 61, "1 john": 62, "2 john": 63, "3 john": 64, jude: 65, revelation: 66,
                "song of solomon": 22
            };
            
            /**
             * Convert Chinese numbers to Arabic numerals.
             *
             * @example convert_numbers("一")       /// Returns "1"
             * @example convert_numbers("十二")     /// Returns "12"
             * @example convert_numbers("三十")     /// Returns "30"
             * @example convert_numbers("四十五")    /// Returns "45"
             * @example convert_numbers("兩百")     /// Returns "200"
             * @example convert_numbers("六百七")    /// Returns "670"
             * @example convert_numbers("六百七十")   /// Returns "670"
             * @example convert_numbers("六百七十八") /// Returns "678"
             * @example convert_numbers("六百零九")   /// Returns "609"
             * @example convert_numbers("创世记五十：十五") /// Returns "创世记50：15"
             * @param   str (string) The text to convert.
             * @return  A string containing the converted numbers, if any
             * @note    This only converts numbers less than one thousand.
             */
            function convert_numbers(str)
            {
                var val = {"一": 1, "二": 2, "两": 2, "兩": 2, "三": 3, "四": 4, "五": 5, "六": 6, "七": 7, "八": 8, "九": 9};
                
                ///TODO: Could also look to see if it is just a string of numbers and then treat it like a list of digits.
                return str.replace(/[一二三四五六七八九十百两兩零]+/g, function (hanzi)
                {
                    var char,
                        digits = [],
                        len = hanzi.length,
                        i,
                        place_holder = 1,
                        res = hanzi,
                        tmp_val;
                    
                    for (i = 0; i < len; i += 1) {
                        char = hanzi[i];
                        tmp_val = val[char];
                        
                        /// If the character has a value (i.e., 1-9), add it to the list of digits.
                        if (tmp_val) {
                            digits[digits.length] = {val: tmp_val, place: place_holder, char: char};
                            /// By default, we assume the digit will be in the ones column unless proven otherwise.
                            place_holder = 1;
                        } else {
                            /// 十 (shi) is special since it can stand alone too.
                            if (char === "十") {
                                /// Is it not first?
                                if (digits.length > 0) {
                                    /// Then it is a place marker for the previous digit.
                                    digits[digits.length - 1].place = 10;
                                } else {
                                    /// Otherwise it equals 10.
                                    digits[digits.length] = {val: 1, place: 10, char: char};
                                }
                                place_holder = 1;
                            } else if (char === "百" && digits.length > 0) {
                                /// 百 (bai) is always a place marker.
                                digits[digits.length - 1].place = 100;
                                /// We set the next digit to the tens column by default (e.g., 一百五 equals 150).
                                place_holder = 10;
                            } else if (char === "零") {
                                /// If we find 零 (ling), just reset and assume the next value will be in the ones column unless proven otherwise.
                                place_holder = 1;
                            }
                        }
                    }
                    
                    /// If it didn't find anything, just return the original value.
                    if (digits.length > 0) {
                        /// Now, just total the digits.
                        res = 0;
                        digits.forEach(function (digit)
                        {
                            res += digit.val * digit.place;
                        });
                    }
                    
                    return res;
                });
            }
            
            return function (ref)
            {
                var book,
                    chapter,
                    cv,
                    tmp_ref = "",
                    verse,
                    zeros;
                
                ///NOTE: Since 1st, 2nd, and 3rd John have Chinese numbers in them (e.g., "约一", "約翰二書", or "约翰三书"), we do not want to convert those number.
                ///      However, the book of John can also be referred to as "约" or "約," so you could have "约" plus a number (e.g., "约四" or "约三：五").
                ///      So we have to temporarily remove references to 1st, 2nd, and 3rd John, convert the numbers, and then add the reference back later.
                /// First, remove references to 1st, 2nd, and 3rd John.
                ref = ref.replace(/^[约約]翰?[一二三][书書]?(?![,.;:；：，。])/, function (john)
                {
                    tmp_ref = john;
                    return "";
                });
                
                /// Now, convert Chinese numbers into Arabic numerals (e.g., "创世记五十：十五" becomes "创世记50：15").
                /// Remove special Chinese words to allow for verse references like this "{book} 第一章".
                /// E.g., "创世记第五章十六节" first becomes "创世记第5章16节" and then becomes "创世记 5 16".
                ///NOTE: The space in " $1$2" is necessary so that two numbers do not get put together.
                ref = convert_numbers(String(ref)).replace(/第(\d+)[章首节節]?|第?(\d+)[章首节節]/g, " $1$2");
                
                /// Add back references to 1st, 2nd, and 3rd John, if any.
                ref = tmp_ref + ref;
                
                /// In order to check to see if the text matches a book, we have to remove any chapter and verse numbers.
                book = books[ref.replace(/\s*\d+(?:[,.;:；：，。\s]\d*)?$/, "").toLowerCase()];
                
                /// If it is not a verse reference, return 0 now.
                if (!book) {
                    return 0;
                }
                
                /// Set the default chapter and verse.
                chapter = "001";
                verse   = "001";
                
                /// Finally, we need to determine the chapter and/or verse reference is they are supplied.
                /// Create an array containing the starting chapter and verse (if any).
                /// Examples:
                ///    "Romans"        => ["Romans"]
                ///    "Romans 3"      => ["Romans", "3", undefined, ""]
                ///    "Romans 3:"     => ["Romans", "3", "",  ""]
                ///    "Romans 3:9"    => ["Romans", "3", "9", ""]
                ///    "Romans 3:9-"   => ["Romans", "3", "9", ""]
                ///    "Romans 3:9-18" => ["Romans", "3", "9", ""]
                ///NOTE: The plus (+) in [；：，。:.;,\s]+ is to match extra spacing possibly added by the first regular expression above.
                cv = ref.split(/\s*([0-9]{1,3})(?:[；：，。:.;,\s]+([0-9]{0,3})[\-0-9]*)?(?:[\d\W]+)?$/);
                
                if (cv.length > 1) {
                    /// Is the number a valid chapter?
                    if (cv[1] > 0) {
                        chapter = String(cv[1]);
                    } else {
                        chapter = "1";
                    }
                    
                    if (cv[2] !== "" && typeof cv[2] !== "undefined") {
                        verse = String(cv[2]);
                    } else {
                        /// For books with only 1 chapter, the chapter reference is optional (i.e., Jude 4 == Jude 1:4).
                        if (this.chapter_count[book] === 1) {
                            verse   = chapter;
                            chapter = "001";
                        }
                    }
                    /// Since verseID's require chapters and verses to be three digits, add in leading zeros, if necessary.
                    zeros   = ["", "00", "0", ""];
                    chapter = zeros[chapter.length] + chapter;
                    verse   = zeros[verse.length]   + verse;
                }
                
                return book + chapter + verse;
            };
        }()),
        
        /**
         * Prepares search terms to adhere to Sphinx syntax before submission to the server.
         *
         * Converts special words to symbols, and converts certain characters to a format adhere to Sphinx syntax.
         *
         * @example query = prepare_search("NOT in  the  AND good OR  beginning  ");  /// Returns "-in the & good | beginning  "
         * @example query = prepare_search("ps 16:title");                            /// Returns "ps 16:0"
         * @example query = prepare_search("“God is good”");                          /// Returns '"God is good"' (Note the curly quotes.)
         * @example query = prepare_search('he build El-beth-el "beth-el: because"'); /// Returns 'he build "El beth el" "beth el: because"' (Note the lack of hyphens and added quotes.)
         * @example query = prepare_search("rom 16:subscription");                    /// Returns "rom 16:255" (Verse 255 is used internally by BibleForge for Pauline subscriptions.)
         * @param   query (string) The terms to be examined.
         * @return  A string that conforms to Sphinx syntax.
         * @note    Called by preform_query() in js/main.js.
         * @note    Replaces AND, OR, and NOT with &, |, and - respectively.
         * @note    Replaces curly quotes with straight.
         * @note    Replaces various hyphens, dashes, and minuses with the standard hyphen (-).
         * @note    This function assumes that whitespace will be trimmed afterward.
         * @todo    Determine if this should be moved out of the language specific file (and maybe just use some language specific variables).
         */
        prepare_query: function (query)
        {
            ///NOTE: /\s+/g gets rid of double spaces within the words (e.g., "here    there" becomes "here there")
            ///      and converts all types of white space to the normal space (e.g., converts non-breaking spaces to normal spaces).
            ///NOTE: /\s+-\s+/g ensures that filter_array() will filter out negative words like "this - that" (i.e., "that" does not need to be highlighted).
            ///NOTE: .replace(/[\u2011－]/g, "-")                              converts non-breaking and fullwidth hyphens into normal hyphens.
            ///NOTE: .replace(/[\u00AD\u2012-\u2015]/g, "")                    removes soft hyphens (\u00AD) and various types of dashes.
            ///NOTE: .replace(/([0-9]+)[:.;,；。：，\s]title/ig, "$1:0")        replaces Psalm title references into an acceptable format (e.g., "Psalm 3:title" becomes "Psalm 3:0").
            ///NOTE: .replace(/([:.;,；。：，\s])subscript(?:ion)?/ig, "$1255") replaces the word "subscription" with the verse number (255) used internally by BibleForge for Pauline subscriptions (e.g., "Philemon subscription" becomes "Philemon 255").
            ///NOTE: "$1255" replaces the text with the first placeholder followed by the literal "255" (without quotes).
            ///NOTE: [\\、]+$ removes the trailing back slashes that are so easy to hit by accident when pressing Enter.
            return query.replace(/[０-９]/g, function (number)
            {
                /// Convert fullwidth numbers to normal numbers.
                return String.fromCharCode(number.charCodeAt(0) - 65248);
            }).replace(/[\\、]+$/, "").replace(/[、，丶]/g, ",").replace(" IN RED", " AS RED").replace(/\s+/g, " ").replace(/\sAND\s|\s*＆\s*/g, " & ").replace(/\sOR\s|\s*｜\s*/g, " | ").replace(/(?:\s[-－]|\s*\bNOT)\s/g, " -").replace(/[‘’]/g, "'").replace(/[“”]/g, "\"").replace(/[\u2011－]/g, "-").replace(/[\u00AD\u2012-\u2015]/g, "").replace(/([0-9]+)[:.;,；。：\s]title/ig, "$1:0").replace(/([:.;,；。：\s])subscript(?:ion)?/ig, "$1255").replace(/＊/g, "*")
                /// In order to handle hyphenated words correctly, we treat them as a quoted phrase.
                /// So we need to wrap hyphenated words in quotes (if they are not in a quotation already) and replace the hyphens with spaces.
               .replace(/"[^"]+"?|[^"\s]+/g, function (terms)
                {
                    var prefix = "";
                    
                    /// Is this a negative boolean?
                    /// E.g., "-not"
                    if (terms[0] === "-") {
                        /// Store the hyphen to be appended at the end.
                        prefix = "-";
                        /// Remove the leading hyphen so that it does not add extra space at the beginning after the hyphens are removed.
                        terms = terms.substring(1);
                    }
                    
                    /// Does the rest of the string have a hyphen in it not followed by a number?  If so, remove hyphens; if not, just return the original string.
                    ///NOTE: The reason for testing to see if there is a number is to leave verse ranges as is.
                    ///      E.g., '1:1-2' will not be changed, but 'Bethlehem-judah' will become '"Bethlehem judah"'.
                    if (/-(?!\d|$)/.test(terms)) {
                        /// Replace all hyphens with spaces and trim any possible space that might have been created.
                        /// In case a hyphen was surrounded by spaces, remove any spaces as well.
                        terms = terms.replace(/\s*-+(?!\d|$)\s*/g, " ").trim();
                        
                        /// Was this word not wrapped in double quotes.  If not, then it needs to be now in order to force the words to be found in order.
                        if (terms[0] !== "\"") {
                            terms = "\"" + terms + "\"";
                        }
                    }
                    
                    return prefix + terms;
                });
        },
        
        /**
         * Preform additional manipulations specific for search terms.
         *
         * @param terms (string) The text to segment.
         * @note  It is necessary to only segment search terms, not verse references, because segmentation could make it difficult to parse verse references.
         *        For example, a verse reference like "詩篇一百一十九：一百七十六" should not be segmented (particularly the numbers).
         */
        prepare_search_terms: function (terms)
        {
            ///NOTE: Because segment() is created after this file loads, we cannot directly set prepare_search_terms() to equal segment().
            /// The regular expression moves asterisks next to segmented words toward the left side.  (Punctuation will automatically connect toward the right if possible.)
            return segment(terms).replace(/\s+\*($|\s)/g, "*$1");
        },
        /**
         * Split up characters so that they can be highlighted properly.
         *
         * Since Chinese does not use spaces to delineate words, defining word boundaries (i.e., segmenting) is only half of the solution.
         * It is also necessary to break up each word into individual units so that a word can be searched for (and highlighted) by a single character.
         * In order to do this, we split up the words into pseudo HTML that just has enough data to be matched by the highlighter.
         *
         * @example BF.lang.separate_grams("<a id=1>上帝</a>"); /// Returns: "<a id=1>上<=1>帝</a>"
         * @param   html (string) The HTML to separate
         * @note    This operates on the same principle as replace_hyphens() (see main.js).
         */
        separate_grams: function (html)
        {
            /// Find all words that have more than one character (excluding punctuation).
            return html.replace(/=(\d+)>([^<]*[^　「『（…）；：，。？！」』、丶<]{2,}[^<]*)/g, function ()
            {
                /// arguments[0] = The entire string found.
                /// arguments[1] = The tag's ID.
                /// arguments[2] = The word
                
                /// Separate the characters and glue them back together with pseudo HTML.
                return "=" + arguments[1] + ">" + arguments[2].replace(/([　「『（]*[^　「『（…）；：，。？！」』、丶](?![…）；：，。？！」』、丶]*$))/g, "$1<" + "=" + arguments[1] + ">");
            });
        },
    };
}(this));
